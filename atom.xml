<?xml version="1.0" encoding="utf-8" standalone="yes"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-US"><title>ywy</title><id>https://ywycd.github.io/</id><description>Recent content on ywy</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><updated>2024-04-16T15:35:44Z</updated><link href="https://ywycd.github.io/atom.xml" rel="self" type="application/rss+xml"/><entry><title>Tailscale内网穿透</title><id>https://ywycd.github.io/post/tailscale/</id><link href="https://ywycd.github.io/post/tailscale/" rel="alternate" type="text/html"/><updated>2024-04-16T15:35:44Z</updated><published>2024-04-16T15:05:32Z</published><description>最初看到讨论连接内网最好有几种方案，免得失联干着急。异地办理移动宽带公网v6想外网访问，搜索发现tailscale，更为易用、功能更完善的 W</description><content type="html"><![CDATA[
        <p>最初看到讨论连接内网最好有几种方案，免得失联干着急。异地办理移动宽带公网v6想外网访问，搜索发现tailscale，更为易用、功能更完善的 WireGuard。</p>
<h2 id="配置">配置</h2>
<p>








<a href="https://tailscale.com/" >官网</a> 客户端<code>tailscale up</code>验证登录第三方，最好选直连方便点。</p>
<h3 id="linux">Linux</h3>
<p>








<a href="https://pkgs.tailscale.com/stable/#static" >官方静态二进制文件</a>  








<a href="https://tailscale.com/download/linux" >安装</a></p>
<div class="highlight"><pre class="chroma"><code class="language-sh" data-lang="sh">wget https://pkgs.tailscale.com/stable/tailscale_1.38.2_arm64.tgz
tar zxvf tailscale_1.38.2_arm64.tgz
cp tailscale_1.38.2_arm64/tailscaled /usr/sbin/tailscaled
cp tailscale_1.38.2_arm64/tailscale /usr/bin/tailscale
cp tailscale_1.38.2_arm64/systemd/tailscaled.service /lib/systemd/system/tailscaled.service
cp tailscale_1.38.2_arm64/systemd/tailscaled.defaults /etc/default/tailscaled
</code></pre></div><p>启动 tailscaled.service 并设置开机自启</p>
<div class="highlight"><pre class="chroma"><code class="language-sh" data-lang="sh">systemctl <span class="nb">enable</span> --now tailscaled
</code></pre></div><p>hiboy的








<a href="https://opt.cn2qq.com/opt-script/" >老毛子插件</a> 








<a href="https://gcore.jsdelivr.net/gh/HiboyHiboy/opt-file/wireguard-go" >wireguard-go</a> 








<a href="https://gcore.jsdelivr.net/gh/HiboyHiboy/opt-file/tailscale" >tailscale</a>。hanwckf版尝试失败懒得刷机，N1小钢炮entware安装wireguard缺少依赖。wireguard安装和使用比较苛刻，内核要求高，应该源码编译能成功。docker wireguard几年前的镜像。下载tgz解压进文件夹运行<code>./tailscale up</code>验证，日志提示upnp。</p>
<h3 id="android">Android</h3>
<p>play或F-Droid下载客户端，1.30.0 版本开始支持自定义服务器。重复点开关闭右上角的“三个点“会出现 <code>Change server</code> 选项。</p>
<h3 id="windows">Windows</h3>
<p>安装。headscale自建打开<code>https://&lt;HEADSCALE&gt;/windows</code>注册表或命令行，目录命令行才可以。</p>
<h2 id="局域网">局域网</h2>
<p>目前只是点对点互通。打通局域网，内网一台设备安装tailscale转发后，也可访问其他。</p>
<h3 id="设置路由转发">设置路由转发</h3>
<div class="highlight"><pre class="chroma"><code class="language-sh" data-lang="sh"><span class="nb">echo</span> <span class="s1">&#39;net.ipv4.ip_forward = 1&#39;</span> <span class="p">|</span> tee /etc/sysctl.d/ipforwarding.conf
<span class="nb">echo</span> <span class="s1">&#39;net.ipv6.conf.all.forwarding = 1&#39;</span> <span class="p">|</span> tee -a /etc/sysctl.d/ipforwarding.conf
sysctl -p /etc/sysctl.d/ipforwarding.conf
</code></pre></div><p>客户端运行，自行修改子网，多条路由用 <code>,</code> 隔开</p>
<div class="highlight"><pre class="chroma"><code class="language-sh" data-lang="sh">tailscale up --accept-routes<span class="o">=</span><span class="nb">true</span> --accept-dns<span class="o">=</span><span class="nb">false</span> --advertise-routes<span class="o">=</span>192.168.2.0/24 --reset
</code></pre></div><p>其他节点启动时需要增加 <code>--accept-routes=true</code>。</p>
<p>








<a href="https://login.tailscale.com/admin/machines" >登录控制台</a>对应设备点击右边三点，选<code>Edit route settings</code>勾选路由save。<code>Exit node</code>出口节点指所有流量经过设备。<code>Disabled key expiry</code> 长期连接可选，不然6个月需重新验证。</p>
<h3 id="ndm自启">NDM自启</h3>
<p>








<a href="https://www.right.com.cn/forum/thread-8279487-1-1.html" >老毛子安装tailscale</a>下载脚本，路由器空间和cpu问题打算放N1。出错修改内容，不像debian复制就行。打通不成功走中继，重启可直连。开机启动<code>null::sysinit:/bin/sh /root/tailscale.sh start</code> 添加到 <code>/etc/inittab</code> 最后。entware是<code>null::sysinit:/bin/sh /opt/etc/init.d/rc.unslung start</code>。</p>
<div class="highlight"><pre class="chroma"><code class="language-sh" data-lang="sh"><span class="cp">#!/bin/sh
</span><span class="cp"></span><span class="nv">tailscale</span><span class="o">=</span><span class="s2">&#34;/root/tailscale/tailscale&#34;</span>
<span class="nv">tailscaled</span><span class="o">=</span><span class="s2">&#34;/root/tailscale/tailscaled&#34;</span>
<span class="o">[</span> -f <span class="s2">&#34;/root/tailscale/tailscale&#34;</span> <span class="o">]</span> <span class="o">&amp;&amp;</span> <span class="nv">tailscale</span><span class="o">=</span><span class="s2">&#34;/root/tailscale/tailscale&#34;</span>
<span class="o">[</span> -f <span class="s2">&#34;/root/tailscale/tailscaled&#34;</span> <span class="o">]</span> <span class="o">&amp;&amp;</span> <span class="nv">tailscaled</span><span class="o">=</span><span class="s2">&#34;/root/tailscale/tailscaled&#34;</span>
<span class="nv">tag</span><span class="o">=</span><span class="k">$(</span>curl -k --silent <span class="s2">&#34;https://api.github.com/repos/lmq8267/tailscale/releases/latest&#34;</span> <span class="p">|</span> grep <span class="s1">&#39;&#34;tag_name&#34;:&#39;</span> <span class="p">|</span> sed -E <span class="s1">&#39;s/.*&#34;([^&#34;]+)&#34;.*/\1/&#39;</span><span class="k">)</span>
<span class="o">[</span> -z <span class="s2">&#34;</span><span class="nv">$tag</span><span class="s2">&#34;</span> <span class="o">]</span> <span class="o">&amp;&amp;</span> <span class="nv">tag</span><span class="o">=</span><span class="s2">&#34;</span><span class="k">$(</span> curl -k -L --connect-timeout <span class="m">20</span> --silent https://api.github.com/repos/lmq8267/tailscale/releases/latest <span class="p">|</span> grep <span class="s1">&#39;tag_name&#39;</span> <span class="p">|</span> cut -d<span class="se">\&#34;</span> -f4 <span class="k">)</span><span class="s2">&#34;</span>

tailscale_start <span class="o">()</span> <span class="o">{</span>
     <span class="o">[</span> -f <span class="nv">$tailscale</span> <span class="o">]</span> <span class="o">&amp;&amp;</span> chmod <span class="m">777</span> <span class="nv">$tailscale</span>
     <span class="o">[</span> -f <span class="nv">$tailscaled</span> <span class="o">]</span> <span class="o">&amp;&amp;</span> chmod <span class="m">777</span> <span class="nv">$tailscaled</span>
     <span class="nv">taiver</span><span class="o">=</span><span class="k">$(</span><span class="nv">$tailscaled</span> -version <span class="p">|</span> sed -n <span class="s1">&#39;1p&#39;</span><span class="k">)</span>
     <span class="nb">echo</span> <span class="s2">&#34;</span><span class="nv">$tag</span><span class="s2">&#34;</span>
     <span class="nb">echo</span> <span class="s2">&#34;</span><span class="nv">$taiver</span><span class="s2">&#34;</span>
     <span class="nv">$tailscaled</span> --cleanup
     killall tailscaled tailscale
     killall -9 tailscaled tailscale
     <span class="nv">su_cmd2</span><span class="o">=</span><span class="s2">&#34;</span><span class="nv">$tailscaled</span><span class="s2"> --state=/var/lib/tailscale/tailscaled.state --socket=/var/run/tailscale/tailscaled.sock&#34;</span>
     <span class="nb">eval</span> <span class="s2">&#34;</span><span class="nv">$su_cmd2</span><span class="s2">&#34;</span> <span class="p">&amp;</span>
     sleep <span class="m">5</span>
     iptables -C INPUT -i tailscale0 -j ACCEPT
     <span class="k">if</span> <span class="o">[</span> <span class="s2">&#34;</span><span class="nv">$?</span><span class="s2">&#34;</span> !<span class="o">=</span> <span class="m">0</span> <span class="o">]</span> <span class="p">;</span> <span class="k">then</span>
       iptables -A INPUT -i tailscale0 -j ACCEPT
     <span class="k">fi</span>
     <span class="nv">taiarp</span><span class="o">=</span><span class="k">$(</span>ifconfig tailscale0 <span class="p">|</span> grep NOARP <span class="p">|</span> awk <span class="s1">&#39;{print }&#39;</span><span class="k">)</span>
     <span class="o">[</span> -n <span class="s2">&#34;</span><span class="nv">$taiarp</span><span class="s2">&#34;</span> <span class="o">]</span> <span class="o">&amp;&amp;</span> ifconfig tailscale0 arp <span class="o">&amp;&amp;</span> <span class="nb">echo</span> <span class="s2">&#34;【Tailscale】&#34;</span> <span class="s2">&#34;检测到接口已禁用arp地址解析协议,正在开启arp!&#34;</span>
     <span class="nv">su_cmd</span><span class="o">=</span><span class="s2">&#34;</span><span class="nv">$tailscale</span><span class="s2"> up --accept-routes=true --accept-dns=false --advertise-routes=192.168.2.0/24  --reset&#34;</span>
     <span class="nb">echo</span> <span class="s2">&#34;【Tailscale】&#34;</span> <span class="s2">&#34;启用子网路由&#34;</span>
     <span class="nb">eval</span> <span class="s2">&#34;</span><span class="nv">$su_cmd</span><span class="s2">&#34;</span> <span class="p">&amp;</span>
     sleep <span class="m">30</span>
     <span class="nv">taip</span><span class="o">=</span><span class="sb">`</span><span class="nv">$tailscale</span> ip<span class="sb">`</span>
     <span class="nb">echo</span> <span class="s2">&#34;【Tailscale】&#34;</span> <span class="s2">&#34;tailscale_IP:</span><span class="nv">$taip</span><span class="s2">&#34;</span>
     <span class="nb">exit</span> <span class="m">0</span>
<span class="o">}</span>  

tailscale_restart <span class="o">()</span> <span class="o">{</span>
  <span class="nb">echo</span> <span class="s2">&#34;【Tailscale】&#34;</span> <span class="s2">&#34;重新启动&#34;</span>
  tailscale_start
  
<span class="o">}</span>

tailscale_close <span class="o">()</span> <span class="o">{</span>
  iptables -D INPUT -i tailscale0 -j ACCEPT
  <span class="nv">$tailscaled</span> --cleanup
  killall tailscaled tailscale
  killall -9 tailscaled tailscale
  sleep <span class="m">8</span>
  <span class="o">[</span> -z <span class="s2">&#34;`pidof tailscaled`&#34;</span> <span class="o">]</span> <span class="o">&amp;&amp;</span> <span class="o">[</span> -z <span class="s2">&#34;`pidof tailscale`&#34;</span> <span class="o">]</span> <span class="o">&amp;&amp;</span> <span class="nb">echo</span> <span class="s2">&#34;【Tailscale】&#34;</span> <span class="s2">&#34;tailscale已关闭!&#34;</span>
<span class="o">}</span>

<span class="k">case</span> <span class="nv">$1</span> in
start<span class="o">)</span>
	tailscale_start
	<span class="p">;;</span>
restart<span class="o">)</span>
	tailscale_restart
	<span class="p">;;</span>
stop<span class="o">)</span>
	tailscale_close
	<span class="p">;;</span>
<span class="k">esac</span>
</code></pre></div><p>常用命令</p>
<p>查看ip<code>tailscale ip -4</code> 网络状况<code>tailscale status</code></p>
<p>测试连接</p>
<div class="highlight"><pre class="chroma"><code class="language-sh" data-lang="sh">tailscale ping &lt;hostname-or-ip&gt;
</code></pre></div><p>设备状况</p>
<div class="highlight"><pre class="chroma"><code class="language-sh" data-lang="sh">tailscale status
</code></pre></div><h2 id="开源版headscale">开源版headscale</h2>
<p>自定义网段无限设备。折腾很久终于成功运行加webui，再看到








<a href="https://github.com/iFargle/headscale-webui/issues/79" >docker安装headscale+headscale-webui</a>回复，








<a href="http://www.putianhui.cn/posts/2ac21da921f0/" >Docker安装headscale内网穿透服务</a>。</p>
<h2 id="免费套餐">免费套餐</h2>
<p>现在用户3设备100 ，<code>No more limits on subnet routers</code> 








<a href="https://tailscale.com/blog/pricing-v3" >price-3</a>。当时用户1设备20路由1 








<a href="https://tailscale.com/blog/2021-06-new-pricing" >price-2</a>。</p>
<h2 id="reference">Reference</h2>
<p>








<a href="https://icloudnative.io/posts/how-to-set-up-or-migrate-headscale/" >Tailscale 基础教程：Headscale 的部署方法和使用教程</a></p>
<p>








<a href="https://www.right.com.cn/forum/thread-8279487-1-1.html" >padavan安装tailscale脚本和自建中继服务器derper</a></p>
<p>








<a href="https://tailscale.com/kb/1080/cli" >Tailscale CLI</a></p>
<p>








<a href="https://blog.gslin.org/archives/2023/04/19/11148/tailscale-%E6%94%BE%E9%AC%86%E5%85%8D%E8%B2%BB%E7%89%88%E7%9A%84%E4%BD%BF%E7%94%A8%E9%99%90%E5%88%B6%EF%BC%8C%E4%BB%A5%E5%8F%8A%E5%95%86%E6%A5%AD%E7%89%88%E7%9A%84%E8%A8%88%E7%AE%97%E6%96%B9%E5%BC%8F/" >Tailscale 放鬆免費版的使用限制，以及商業版的計算方式</a></p>

      ]]></content></entry><entry><title>备忘录1</title><id>https://ywycd.github.io/post/memo1/</id><link href="https://ywycd.github.io/post/memo1/" rel="alternate" type="text/html"/><updated>2024-03-22T11:32:41Z</updated><published>2024-03-22T09:59:53Z</published><description>有的文章里链接已无法访问，最好还是本地备份。记录解决方法，免得下次还要搜索挺久。 用 cURL 自動更新 Cloudflare IP 地址實現 DDNS 登录 Cloudflare 账号，然后在「My Profi</description><content type="html"><![CDATA[
        <p>有的文章里链接已无法访问，最好还是本地备份。记录解决方法，免得下次还要搜索挺久。</p>
<p>








<a href="https://ignorance.nova.moe/ddns-with-cloudflare/" >用 cURL 自動更新 Cloudflare IP 地址實現 DDNS</a></p>
<p>登录 Cloudflare 账号，然后在「My Profile」创建「API Token」，权限Zone.Zone, Zone.DNS ，用-H “Authorization: Bearer xxxxxxxx”授权。</p>
<p><strong>获得 ZoneID 和 Record ID</strong></p>
<p><code>curl -X GET &quot;https://api.cloudflare.com/client/v4/zones -H “Authorization: Bearer xxxxxxxx”</code>
获取所有 Zones，找到对应域名的 Zone ID。
<code>curl -X GET &quot;https://api.cloudflare.com/client/v4/zones/&lt;域名的 ZoneID&gt;/dns\_records&quot; -H &quot;Authorization: Bearer xxxxxxx&quot;      -H &quot;Content-Type:application/json&quot;</code>
再找到对应的 Record ID。</p>
<p><strong>修改 Record 解析</strong></p>
<div class="highlight"><pre class="chroma"><code class="language-sh" data-lang="sh">home<span class="se">\_</span>ip<span class="o">=</span><span class="k">$(</span>curl ip.sb<span class="k">)</span>
curl -X PUT <span class="s2">&#34;https://api.cloudflare.com/client/v4/zones/&lt;域名的 ZoneID&gt;/dns\_records/&lt;Record ID&gt;&#34;</span> <span class="se">\\</span>
     -H <span class="s2">&#34;Authorization: Bearer xxxxxxx&#34;</span> <span class="se">\\</span>
     -H <span class="s2">&#34;Content-Type: application/json&#34;</span> <span class="se">\\</span>
     --data <span class="s1">&#39;{&#34;type&#34;:&#34;A&#34;,&#34;name&#34;:&#34;domain&#34;,&#34;content&#34;:&#34;&#39;</span><span class="nv">$home</span><span class="se">\_</span>ip<span class="s1">&#39;&#34;,&#34;ttl&#34;:120,&#34;proxied&#34;:false}&#39;</span>
</code></pre></div><p>修改ip变量和域名，cron定时更新。</p>
<p>笔记本新帐户键盘输入字母变成数字和字符，搜索是因为那几个键数字小键盘。<code>FN+NumLK</code>。</p>
<p>








<a href="https://bbs.letitfly.me/d/1129" >屏蔽 bilibili / bilibili 漫画的青少年模式提示</a>
b漫把日期调到很多年后，打开app，再把日期改回来。</p>
<p>








<a href="https://bbs.letitfly.me/d/1192" >屏蔽QQ升级提示和弹窗（需root）</a></p>
<p>准备可root文件管理器和终端。QQ检测更新的配置文件地址为/data/data/com.tencent.mobileqq/files/upgrade_config/config_upgrade_xxxxxx（xxxxxx为QQ号）。使用编辑文本的方式打开它，照注释按需求修改。</p>
<p>保存文件后还要修改文件权限，防止屑QQ再改回去。然而使用chmod修改还是会改回，所以我们使用更加强力的chattr。
打开终端后先获取root权限，输入su/tsu回车。根据自身情况修改以下指令：</p>
<div class="highlight"><pre class="chroma"><code class="language-sh" data-lang="sh">busybox chattr +i /data/data/com.tencent.mobileqq/files/upgrade_config/config_upgrade_xxxxxx
</code></pre></div><p>修改完后复制进入终端执行即可。如果想测试是否修改成功，可以尝试用文件管理器删除config_upgrade_xxxxxx文件，无法删除即修改成功。偶尔还是会提示更新。另外卸载QQ之前记得把权限修改回去，只需要把指令中的+i改为-i即可。</p>

      ]]></content></entry><entry><title>Action排队中解决</title><id>https://ywycd.github.io/post/action/</id><link href="https://ywycd.github.io/post/action/" rel="alternate" type="text/html"/><updated>2024-02-13T06:16:35Z</updated><published>2024-02-13T04:47:17Z</published><description>码字更新推送，发现action排队，查看GitHub Pages Action生成deploy_key填入，推送还是排队。 查看action-hugo，更</description><content type="html"><![CDATA[
        <p>码字更新推送，发现action排队，查看GitHub Pages Action生成deploy_key填入，推送还是排队。</p>
<p>查看action-hugo，更新workflow。推送不了，Fine-grained tokens的权限action和workflow选读写。误传某key推送git。</p>
<p>ac出错无法发布，更改hugo版本不行。本地hugo也出错，查看对应md多了head等字符，第一次推送git pull加的吧。本地hugo测试陆续修改出错md。<code>hugo server -d</code> 访问ok。更换GITHUB_TOKEN。</p>
<p>又说commit behind，提示git pull。</p>
<pre><code>git fetch
git rebase 
git push origin main
</code></pre><p>推送build出错，119格式不支持换'0.80.0'。Deploy出错忘记把with下的deploy_token改成github_token。格式有点不太对，本地运行修改再推送。</p>

      ]]></content></entry><entry><title>电视直播</title><id>https://ywycd.github.io/post/tvlive/</id><link href="https://ywycd.github.io/post/tvlive/" rel="alternate" type="text/html"/><updated>2024-02-13T06:16:35Z</updated><published>2024-02-12T11:29:46Z</published><description>去年广电整改，直播软件纷纷失效，好处是盒子能直接进直播。 最开始信号线连电视看，某次升级换成网络盒子连网线插卡使用。某天盒子坏看不了，问客服说</description><content type="html"><![CDATA[
        <p>去年广电整改，直播软件纷纷失效，好处是盒子能直接进直播。</p>
<p>最开始信号线连电视看，某次升级换成网络盒子连网线插卡使用。某天盒子坏看不了，问客服说要自费才能上门更换。当时N1刷机安软件，两个遥控器不太方便后面买刷过的魔百盒（商家随机发的CM311-3），没赶上魔百盒最便宜的时段。905l3a芯片性能更好。直播ipv6源、php代理、dtmb地波购买天线等方法。手机卡v6，但光猫设置v4/v6桥接无v6地址放弃。</p>
<h2 id="php服务器">php服务器</h2>
<p>手机ksweb搭建方便，工具phpMyAdmin安装MySQL数据库。另外下载








<a href="https://www.right.com.cn/forum/thread-8315423-1-1.html" >php</a>放htdocs文件夹。测试几天v6源和php代理陆续失效。播放器差不多，重要的是源。之前下过个人维护源的软件已失效。Kodi加载慢会卡，国内用过有个自己跳购物广告台，有的后台自动下载另一软件弹安装界面。考虑操作和加载速度，留tivimate和dyip影音。win直接下载大神的压缩包或者phpstudy。</p>
<p>小钢炮NDM上配置费了好久，各种尝试均失败。照大卫教程搭建php-fpm和nginx环境，下载文件解压，设置/var/www目录权限，<code>chown -R www-data:www-data /var/www</code>权限755 <code>chmod 755 file</code>。命令运行相应程序，首页显示php信息，访问其他php文件失效提示<code>WARNING: [pool www] child 6 said into stderr: &quot;ERROR: Unable to open primary script</code>。搜索问题更改nginx配置文件，权限问题nginx改为www-data，运行提示<code>nginx: [emerg] &quot;user&quot; directive is not allowed</code>发现放错目录，不应该在conf.d。 nginx.conf会引入/etc/nginx/conf.d/目录下的*.conf文件，单独nginx.conf是在/etc/nginx/目录下，冲突的问题。另外修改php.ini的<code>cgi.fix_pathinfo = 0 </code>。访问被禁看日志显示权限，文件600用户、组root，更改用户、组www-data或者644权限。网页文件夹755，文件644。终于能看php代理，转换docker-compose配置运行方便。docker-compose升级<code>curl -L &quot;https://mirror.ghproxy.com/https://github.com/docker/compose/releases/download/v2.17.0/docker-compose-$(uname -s)-$(uname -m)&quot; -o /usr/bin/docker-compose</code>/usr/bin目录下更改权限，<code>docker-compose version</code>。编写自用源上传仓库。有的文件php5.6格式错误，升级7.4。</p>
<h2 id="电信iptv">电信IPTV</h2>
<p>听说电信组播光猫iptv、组播vlan、igmp开启就能看。曾经有盒子当时没工具没抓包，还好恩山有人分享组播源。光猫桥接路由拨号，老毛子开启iptv组播转内网，pot播不了rtp://。连内网无法访问1.1，<code>iptables -t nat -A POSTROUTING -o eth3 -d 192.168.1.0/24 -j SNAT --to-source 192.168.1.78</code>，eth3为MAN的接口，1.78 MAN ip。临时生效，若想永久生效，添加到“在 WAN 上行/下行启动后执行”脚本。设了stb隔离vlan过滤直接没网。路由显示等待ppp连接，电脑连光猫拨号无v6，iptv路由wan要填盒子信息，没填一直connecting。上网和iptv不绑定端口，光猫华为界面 高级配置-路由-IPV4 VLAN绑定配置，LAN1 vlan绑定<code>41/41,43/43</code>。光猫lan1连路由wan口，vlan过滤对应填上，stb隔离看有无盒子连。选zeroconf和静态ip都可，静态ip不同网段。网线和wifi可播放，内网udpxy改对应格式可播放，status有客户端。浙江上网41，IPTV43，组播vlan4000。弄完老毛子单线复用，ifconfig发现MAN口变成eth3.41。好像只vlan绑定/过滤43就行。








<a href="https://github.com/luckyyyyy/blog/issues/44" >iptv抓包</a>认证后可获取10.x内网，单播rtsp://。</p>
<h2 id="源">源</h2>
<p>








<a href="https://www.right.com.cn/forum/forum-182-1.html" >恩山</a>和








<a href="https://angtv.cc/" >安歌</a> 








<a href="https://m3u.ibert.me/" >自动更新源</a> 








<a href="http://tonkiang.us/" >静态源搜索</a> 








<a href="https://www.cnblogs.com/xxy002/p/17858312.html" >v4v6源</a> 








<a href="https://live.fanmingming.com/" >fanmingming台标|egp|v6</a> 








<a href="https://live.fanmingming.com/tv/m3u/ipv6.m3u" >fmmv6</a></p>
<p>m3u txt格式转换 








<a href="https://guihet.com/convert-m3u-js.html" >黑鸟</a> 








<a href="https://epg.112114.eu.org/cjtrans" >112114</a> 








<a href="https://live.fanmingming.com/txt2m3u/" >fmmtxt2mu3</a></p>
<p>在线m3u转txt <a href="https://fanmingming.com/txt?url=">https://fanmingming.com/txt?url=</a>   <a href="https://angtv.cc/tool/m3ulist.php?url=">https://angtv.cc/tool/m3ulist.php?url=</a></p>
<p>








<a href="https://angtv.cc/tool/szzlist.php" >数组转换频道列表工具</a></p>
<h2 id="参考文章">参考文章</h2>
<p>








<a href="https://www.right.com.cn/forum/thread-8315423-1-1.html" >自建DIYP影音和TVBOX的接口PHP服务</a></p>
<p>








<a href="https://www.iyuu.cn/archives/129/" >灯大小钢炮docker五步搭建php-fpm和nginx环境（官方镜像）</a></p>
<p>








<a href="https://www.cnblogs.com/menghome/p/11106648.html" >nginx 启用php解析及解决无法访问报错Primary script unknown的过程</a></p>
<p>








<a href="https://www.right.com.cn/forum/thread-464371-1-1.html" >从外部访问光猫除了威屁恩,和单臂路由还有没有别的方法</a></p>

      ]]></content></entry><entry><title>阅读介绍</title><id>https://ywycd.github.io/post/gedoor-mybookshelf-introductin/</id><link href="https://ywycd.github.io/post/gedoor-mybookshelf-introductin/" rel="alternate" type="text/html"/><updated>2024-03-22T11:32:41Z</updated><published>2021-04-06T14:07:34Z</published><description>介绍 之前小说下载到本地，用阅读器看。还记得第一次用自带软件看完，不记录跳转上次进度，每次都要跳。换了其他阅读器。后面接触到阅读，需要自己找书</description><content type="html"><![CDATA[
        <h2 id="介绍">介绍</h2>
<p>之前小说下载到本地，用阅读器看。还记得第一次用自带软件看完，不记录跳转上次进度，每次都要跳。换了其他阅读器。后面接触到阅读，需要自己找书源导入，另外可选净化规则。可以自行设置界面弄背景之类，“奇迹暖暖阅读”。</p>
<p>现在共有三个版本，阅读2.0、阅读3.0、阅读pro。pro在play商店，公众号活跃可以兑换。之前一直用2.0，加了大佬书源、净化，自己弄了某小说的目录正则。play支持作者，昨天下载使用，2.0备份后3.0导入旧版数据。重新校验了书院，100多个失效，导入关耳、namofree大佬的书源。体验了下，看书没有第一排百度搜索xx网站。然后本地小说，2.0目录会出现第一章（1），实际不识别，看全本问题不大。换成3.0观看，正则表达式很多，前面勾选一个就正常了！！后续主用3.0，可以听书、订阅、看漫画等。</p>
<h2 id="阅读版本">阅读版本</h2>
<p>2.0下载地址 <a href="https://github.com/gedoor/MyBookshelf/releases">https://github.com/gedoor/MyBookshelf/releases</a> 另外还有90盘地址。书源、净化要使用2.0专用。2.0最终书源 <a href="https://www.coolapk.com/feed/23913399">https://www.coolapk.com/feed/23913399</a> 和 <a href="https://www.52pojie.cn/thread-1321967-1-1.html">https://www.52pojie.cn/thread-1321967-1-1.html</a>。 之前用这个 <a href="https://www.52pojie.cn/thread-1081455-1-1.html">https://www.52pojie.cn/thread-1081455-1-1.html</a> 导入规则，乌云大佬的排版还有其他大佬分享的书源。</p>
<p>3.0下载地址 <a href="https://github.com/gedoor/legado">https://github.com/gedoor/legado</a>。用订阅源选择书源合集，分开导入就行，很方便。
另外有pro版，其他根据阅读app修改的软件。</p>
<h2 id="书源及其他">书源及其他</h2>
<p>源仓库地址 <a href="http://yck.mumuceo.com/yuedu/shuyuan/index.html">http://yck.mumuceo.com/yuedu/shuyuan/index.html</a> ，导入需要的书源，注意看版本号。3.0可以用订阅合集进行导入。也可以导入其他大佬书源合集，源不在多，适合自己的最好。</p>
<p>一程大佬 <a href="https://gitee.com/vpq/yd">https://gitee.com/vpq/yd</a>。</p>
<p>持续更新的书源 <a href="https://yuedu.xiu2.xyz/">https://yuedu.xiu2.xyz/</a>。</p>
<p>namofree小而精 <a href="http://shuyuan.miaogongzi.net/shuyuan/1617406392.json">http://shuyuan.miaogongzi.net/shuyuan/1617406392.json</a>。</p>
<p>乌云大佬的净化规则，完整版27-38删减段落，精简正文。谨慎使用。详见https://www.coolapk.com/feed/25288123 。不世玄奇分享的通用书源和全网搜书（3.0才能使用），使用方法见https://www.coolapk.com/feed/25743162 。
另外还可以设置界面、排版、字体等。使用在线tts，安装tts调用朗读等。源仓库有阅读主题分享。用朗读等。源仓库有阅读主题分享。</p>
<h2 id="阅读版本-1">阅读版本</h2>
<p>2.0下载地址 <a href="https://github.com/gedoor/MyBookshelf/releases">https://github.com/gedoor/MyBookshelf/releases</a> 另外还有90盘地址。书源、净化要使用2.0专用。2.0最终书源 <a href="https://www.coolapk.com/feed/23913399">https://www.coolapk.com/feed/23913399</a> 和 <a href="https://www.52pojie.cn/thread-1321967-1-1.html">https://www.52pojie.cn/thread-1321967-1-1.html</a>。之前用这个 <a href="https://www.52pojie.cn/thread-1081455-1-1.html">https://www.52pojie.cn/thread-1081455-1-1.html</a> 导入规则，乌云大佬的排版还有其他大佬分享的书源。</p>
<p>3.0下载地址 <a href="https://github.com/gedoor/legado">https://github.com/gedoor/legado</a>。用订阅源选择书源合集，分开导入就行，很方便。</p>
<p>另外有pro版，其他根据阅读app修改的软件。</p>
<h2 id="书源及其他-1">书源及其他</h2>
<p>源仓库地址 <a href="http://yck.mumuceo.com/yuedu/shuyuan/index.html">http://yck.mumuceo.com/yuedu/shuyuan/index.html</a>，导入需要的书源，注意看版本号。3.0可以用订阅合集进行导入。也可以导入其他大佬书源合集，源不在多，适合自己的最好。</p>
<p>一程大佬 <a href="https://gitee.com/vpq/yd">https://gitee.com/vpq/yd</a>。</p>
<p>持续更新 <a href="https://yuedu.xiu2.xyz/">https://yuedu.xiu2.xyz/</a>。</p>
<p>namofree小而精 <a href="http://shuyuan.miaogongzi.net/shuyuan/1617406392.json">http://shuyuan.miaogongzi.net/shuyuan/1617406392.json</a>。</p>
<p>乌云大佬的净化规则，完整版27-38删减段落，精简正文，谨慎使用。详见 <a href="https://www.coolapk.com/feed/25288123">https://www.coolapk.com/feed/25288123</a>。不世玄奇分享的通用书源和全网搜书（3.0才能使用），使用方法见 <a href="https://www.coolapk.com/feed/25743162">https://www.coolapk.com/feed/25743162</a>。</p>
<p>还可以设置界面、排版、字体等。使用在线tts，安装tts调用朗读等。源仓库有阅读主题分享。</p>

      ]]></content></entry><entry><title>局域网https认证</title><id>https://ywycd.github.io/post/lan-https-autho/</id><link href="https://ywycd.github.io/post/lan-https-autho/" rel="alternate" type="text/html"/><updated>2024-02-13T05:13:25Z</updated><published>2021-04-06T12:15:55Z</published><description>感谢 本地https快速解决方案 教程，开始看过这篇，win10下载失败就没继续。内网Filemanager证书错误，之前用frp曲线救助。证书</description><content type="html"><![CDATA[
        <p>感谢








<a href="https://www.jianshu.com/p/7cb5c2cffaaa" >本地https快速解决方案</a> 教程，开始看过这篇，win10下载失败就没继续。内网Filemanager证书错误，之前用frp曲线救助。证书过期，更换证书出问题，决心研究下这个。</p>
<p>








<a href="https://github.com/FiloSottile/mkcert/releases/latest" >下载地址</a> 下载到本地后，win10cmd运行mkcert，提示不存在。需要加上程序名字运行。-install安装本地可信CA，最后出错。</p>
<pre><code>D:\Downloads&gt;mkcert
'mkcert' 不是内部或外部命令，也不是可运行的程序
或批处理文件。

D:\Downloads&gt;mkcert-v1.4.3-windows-amd64 -install
The local CA is already installed in the system trust store! 👍
ERROR: failed to execute &quot;keytool -importcert&quot;: exit status 1

Certificate was added to keystore
keytool error: java.io.FileNotFoundException: C:\Program Files (x86)\Java\jre1.8.0_151\lib\security\cacerts (�ܾ����ʡ�)
</code></pre><p>局域网内使用https，签发证书，加上本机的局域网ip认证。</p>
<pre><code>D:\Downloads&gt;mkcert-v1.4.3-windows-amd64 localhost 127.0.0.1 ::1 192.168.2.144
Note: the local CA is not installed in the Java trust store.
Run &quot;mkcert -install&quot; for certificates to be trusted automatically ⚠️

Created a new certificate valid for the following names 📜
 - &quot;localhost&quot;
 - &quot;127.0.0.1&quot;
 - &quot;::1&quot;
 - &quot;192.168.2.144&quot;

The certificate is at &quot;./localhost+3.pem&quot; and the key at &quot;./localhost+3-key.pem&quot; ✅

It will expire on 7 July 2023 🗓
</code></pre><p>先来回忆一下证书可信的三个要素:</p>
<ul>
<li>由可信的CA机构签发</li>
<li>访问的地址跟证书认证地址相符</li>
<li>证书在有效期内</li>
</ul>
<p>更新内网机器的https证书，访问https://192.168.2.144是可信的。使用-CAROOT命令可以列出CA证书的存放路径。</p>
<pre><code>D:\Downloads&gt;mkcert-v1.4.3-windows-amd64 -CAROOT
C:\Users\ywy\AppData\Local\mkcert
</code></pre><p>可以看到CA路径下有rootCA-key.pem和rootCA.pem两个文件，用户需要信任rootCA.pem这个文件。将rootCA.pem拷贝副本，并重命名为rootCA.crt(因为windows并不识别pem扩展名，并且Ubuntu也不会将pem扩展名作为CA证书文件对待)，将rootCA.crt文件分发给其他用户，手工导入。</p>
<p>windows双击rootCA.crt，在证书导入向导中将证书导入<code>受信任的根证书颁发机构</code>。</p>
<p>安卓手机设置搜索证书，有的可以直接安装证书。</p>
<p>其他一些高级用法，<code>[-help]</code>看说明。比如<code>-cert-file FILE, -key-file FILE, -p12-file FILE</code>可以定义输出的证书文件名。<code>-pkcs12</code>命令可以产生PKCS12格式的证书。java程序通常不支持PEM格式的证书，但是支持PKCS12格式的证书。</p>

      ]]></content></entry><entry><title>docker切换为Clash-premium</title><id>https://ywycd.github.io/post/change-to-clash-premium/</id><link href="https://ywycd.github.io/post/change-to-clash-premium/" rel="alternate" type="text/html"/><updated>2024-02-13T03:52:39Z</updated><published>2021-04-06T12:14:52Z</published><description>EMBY推荐使用clash tun模式，加上其他原因考虑换成clash-premium。惯例查阅资料，开启tun，结果显示Start Tun interface error: CreateTUN(\&amp;quot;utun\&amp;quot;) failed;</description><content type="html"><![CDATA[
        <p>EMBY推荐使用clash tun模式，加上其他原因考虑换成clash-premium。惯例查阅资料，开启tun，结果显示<code>Start Tun interface error: CreateTUN(\&quot;utun\&quot;) failed; /dev/net/tun does not exist</code>。另外从








<a href="https://github.com/comzyh/clash/releases" >comzyh</a> 处下载tun内核，改名放到/dev/net/tun，错误。配置.yml里加devices，提示<code>ERROR: for clash  Cannot start service clash: linux runtime spec devices: error gathering device information while adding custom device &quot;/dev/net/tun&quot;: not a device node</code> 可能需要映射，或者系统运行tun，无奈放弃。</p>
<p>复制








<a href="https://zhezhiyu.xyz/archives/94" >该博客</a> Premiere版完整配置。由于不是直接订阅clash, <code>proxy-providers</code>改为<code>proxies</code>，其他地方有修改。Premiere支持订阅规则，用RULE-SET。后续发现局域网走代理，加<code>- RULE-SET,lancidr,DIRECT</code>。</p>
<div class="highlight"><pre class="chroma"><code class="language-yaml" data-lang="yaml"><span class="nt">mixed-port</span><span class="p">:</span><span class="w"> </span><span class="m">7890</span><span class="w">
</span><span class="w"></span><span class="c">#socks-port: 7891</span><span class="w">
</span><span class="w"></span><span class="nt">redir-port</span><span class="p">:</span><span class="w"> </span><span class="m">7892</span><span class="w">
</span><span class="w"></span><span class="c">#authentication:</span><span class="w">
</span><span class="w"></span><span class="c">#- &#34;user1:pw1&#34;</span><span class="w">
</span><span class="w"></span><span class="nt">allow-lan</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">
</span><span class="w"></span><span class="nt">bind-address</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;*&#39;</span><span class="w">
</span><span class="w"></span><span class="nt">mode</span><span class="p">:</span><span class="w"> </span><span class="l">Rule</span><span class="w">
</span><span class="w"></span><span class="nt">log-level</span><span class="p">:</span><span class="w"> </span><span class="l">info</span><span class="w">
</span><span class="w"></span><span class="nt">external-controller</span><span class="p">:</span><span class="w"> </span><span class="m">0.0.0.0</span><span class="p">:</span><span class="m">9090</span><span class="w">
</span><span class="w"></span><span class="nt">external-ui</span><span class="p">:</span><span class="w"> </span><span class="l">/ui</span><span class="w">
</span><span class="w"></span><span class="nt">secret</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;pw&#34;</span><span class="w">
</span><span class="w"></span><span class="nt">interface-name</span><span class="p">:</span><span class="w"> </span><span class="l">eh0</span><span class="w">
</span><span class="w"></span><span class="c">#tun: </span><span class="w">
</span><span class="w">   </span><span class="c">#enable: true</span><span class="w">
</span><span class="w">   </span><span class="c">#stack: system # or gvisor</span><span class="w">
</span><span class="w">   </span><span class="c">#dns-hijack:</span><span class="w">
</span><span class="w">     </span><span class="c">#- tcp://8.8.8.8:53</span><span class="w">
</span><span class="w">     </span><span class="c">#- 8.8.8.8:1053</span><span class="w">
</span><span class="w">   </span><span class="c">#macOS-auto-route: true</span><span class="w">
</span><span class="w"></span><span class="nt">dns</span><span class="p">:</span><span class="w">
</span><span class="w"></span><span class="nt">enable</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">
</span><span class="w"></span><span class="nt">ipv6</span><span class="p">:</span><span class="w"> </span><span class="kc">false</span><span class="w">
</span><span class="w"></span><span class="nt">listen</span><span class="p">:</span><span class="w"> </span><span class="m">0.0.0.0</span><span class="p">:</span><span class="m">1053</span><span class="w">
</span><span class="w"></span><span class="nt">enhanced-mode</span><span class="p">:</span><span class="w"> </span><span class="l">redir-host</span><span class="w">
</span><span class="w"></span><span class="nt">nameserver</span><span class="p">:</span><span class="w">
</span><span class="w">  </span>- <span class="m">114.114.114.114</span><span class="w">
</span><span class="w">  </span>- <span class="m">119.29.29.29</span><span class="w">
</span><span class="w">  </span>- <span class="m">223.5.5.5</span><span class="w">
</span><span class="w">  </span>- <span class="l">tls://dns.rubyfish.cn:853</span><span class="w">
</span><span class="w"></span><span class="nt">fallback</span><span class="p">:</span><span class="w">
</span><span class="w">  </span>- <span class="l">tls://8.8.8.8:853</span><span class="w">
</span><span class="w">  </span>- <span class="l">tcp://208.67.222.222:443</span><span class="w">
</span><span class="w">  </span>- <span class="l">https://doh.pub/dns-query</span><span class="w">
</span><span class="w">
</span><span class="w"></span><span class="nt">rule-providers</span><span class="p">:</span><span class="w">
</span><span class="w"></span><span class="nt">reject</span><span class="p">:</span><span class="w">
</span><span class="w"></span><span class="c"># 拦截域名,可选拦截</span><span class="w">
</span><span class="w">  </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">http</span><span class="w">
</span><span class="w">  </span><span class="nt">behavior</span><span class="p">:</span><span class="w"> </span><span class="l">domain</span><span class="w">
</span><span class="w">  </span><span class="nt">url</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/reject.txt&#34;</span><span class="w">
</span><span class="w">  </span><span class="nt">path</span><span class="p">:</span><span class="w"> </span><span class="l">./ruleset/reject.yaml</span><span class="w">
</span><span class="w">  </span><span class="nt">interval</span><span class="p">:</span><span class="w"> </span><span class="m">86400</span><span class="w">
</span><span class="w">
</span><span class="w"></span><span class="nt">icloud</span><span class="p">:</span><span class="w">
</span><span class="w"></span><span class="c"># iCloud直连域名,建议直连</span><span class="w">
</span><span class="w">  </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">http</span><span class="w">
</span><span class="w">  </span><span class="nt">behavior</span><span class="p">:</span><span class="w"> </span><span class="l">domain</span><span class="w">
</span><span class="w">  </span><span class="nt">url</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/icloud.txt&#34;</span><span class="w">
</span><span class="w">  </span><span class="nt">path</span><span class="p">:</span><span class="w"> </span><span class="l">./ruleset/icloud.yaml</span><span class="w">
</span><span class="w">  </span><span class="nt">interval</span><span class="p">:</span><span class="w"> </span><span class="m">86400</span><span class="w">
</span><span class="w">
</span><span class="w"></span><span class="nt">apple</span><span class="p">:</span><span class="w">
</span><span class="w"></span><span class="c"># 苹果直连域名,建议直连</span><span class="w">
</span><span class="w">  </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">http</span><span class="w">
</span><span class="w">  </span><span class="nt">behavior</span><span class="p">:</span><span class="w"> </span><span class="l">domain</span><span class="w">
</span><span class="w">  </span><span class="nt">url</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/apple.txt&#34;</span><span class="w">
</span><span class="w">  </span><span class="nt">path</span><span class="p">:</span><span class="w"> </span><span class="l">./ruleset/apple.yaml</span><span class="w">
</span><span class="w">  </span><span class="nt">interval</span><span class="p">:</span><span class="w"> </span><span class="m">86400</span><span class="w">
</span><span class="w">
</span><span class="w"></span><span class="nt">google</span><span class="p">:</span><span class="w">
</span><span class="w"></span><span class="c"># 谷歌直连域名,建议直连</span><span class="w">
</span><span class="w">  </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">http</span><span class="w">
</span><span class="w">  </span><span class="nt">behavior</span><span class="p">:</span><span class="w"> </span><span class="l">domain</span><span class="w">
</span><span class="w">  </span><span class="nt">url</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/google.txt&#34;</span><span class="w">
</span><span class="w">  </span><span class="nt">path</span><span class="p">:</span><span class="w"> </span><span class="l">./ruleset/google.yaml</span><span class="w">
</span><span class="w">  </span><span class="nt">interval</span><span class="p">:</span><span class="w"> </span><span class="m">86400</span><span class="w">
</span><span class="w">
</span><span class="w"></span><span class="nt">proxy</span><span class="p">:</span><span class="w">
</span><span class="w"></span><span class="c"># 需要代理的域名</span><span class="w">
</span><span class="w">  </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">http</span><span class="w">
</span><span class="w">  </span><span class="nt">behavior</span><span class="p">:</span><span class="w"> </span><span class="l">domain</span><span class="w">
</span><span class="w">  </span><span class="nt">url</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/proxy.txt&#34;</span><span class="w">
</span><span class="w">  </span><span class="nt">path</span><span class="p">:</span><span class="w"> </span><span class="l">./ruleset/proxy.yaml</span><span class="w">
</span><span class="w">  </span><span class="nt">interval</span><span class="p">:</span><span class="w"> </span><span class="m">86400</span><span class="w">
</span><span class="w">
</span><span class="w"></span><span class="nt">direct</span><span class="p">:</span><span class="w">
</span><span class="w"></span><span class="c"># 直连域名</span><span class="w">
</span><span class="w">  </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">http</span><span class="w">
</span><span class="w">  </span><span class="nt">behavior</span><span class="p">:</span><span class="w"> </span><span class="l">domain</span><span class="w">
</span><span class="w">  </span><span class="nt">url</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/direct.txt&#34;</span><span class="w">
</span><span class="w">  </span><span class="nt">path</span><span class="p">:</span><span class="w"> </span><span class="l">./ruleset/direct.yaml</span><span class="w">
</span><span class="w">  </span><span class="nt">interval</span><span class="p">:</span><span class="w"> </span><span class="m">86400</span><span class="w">
</span><span class="w">
</span><span class="w"></span><span class="nt">gfw</span><span class="p">:</span><span class="w">
</span><span class="w"></span><span class="c"># GFW域名列表</span><span class="w">
</span><span class="w">  </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">http</span><span class="w">
</span><span class="w">  </span><span class="nt">behavior</span><span class="p">:</span><span class="w"> </span><span class="l">domain</span><span class="w">
</span><span class="w">  </span><span class="nt">url</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/gfw.txt&#34;</span><span class="w">
</span><span class="w">  </span><span class="nt">path</span><span class="p">:</span><span class="w"> </span><span class="l">./ruleset/gfw.yaml</span><span class="w">
</span><span class="w">  </span><span class="nt">interval</span><span class="p">:</span><span class="w"> </span><span class="m">86400</span><span class="w">
</span><span class="w">
</span><span class="w"></span><span class="nt">greatfire</span><span class="p">:</span><span class="w">
</span><span class="w"></span><span class="c"># GreatFire域名</span><span class="w">
</span><span class="w">  </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">http</span><span class="w">
</span><span class="w">  </span><span class="nt">behavior</span><span class="p">:</span><span class="w"> </span><span class="l">domain</span><span class="w">
</span><span class="w">  </span><span class="nt">url</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/greatfire.txt&#34;</span><span class="w">
</span><span class="w">  </span><span class="nt">path</span><span class="p">:</span><span class="w"> </span><span class="l">./ruleset/greatfire.yaml</span><span class="w">
</span><span class="w">  </span><span class="nt">interval</span><span class="p">:</span><span class="w"> </span><span class="m">86400</span><span class="w">
</span><span class="w">
</span><span class="w"></span><span class="nt">tld-not-cn</span><span class="p">:</span><span class="w">
</span><span class="w"></span><span class="c"># 非中国大陆使用的顶级域名列表</span><span class="w">
</span><span class="w">  </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">http</span><span class="w">
</span><span class="w">  </span><span class="nt">behavior</span><span class="p">:</span><span class="w"> </span><span class="l">domain</span><span class="w">
</span><span class="w">  </span><span class="nt">url</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/tld-not-cn.txt&#34;</span><span class="w">
</span><span class="w">  </span><span class="nt">path</span><span class="p">:</span><span class="w"> </span><span class="l">./ruleset/tld-not-cn.yaml</span><span class="w">
</span><span class="w">  </span><span class="nt">interval</span><span class="p">:</span><span class="w"> </span><span class="m">86400</span><span class="w">
</span><span class="w">
</span><span class="w"></span><span class="nt">telegramcidr</span><span class="p">:</span><span class="w">
</span><span class="w"></span><span class="c"># TG使用的IP地址</span><span class="w">
</span><span class="w">  </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">http</span><span class="w">
</span><span class="w">  </span><span class="nt">behavior</span><span class="p">:</span><span class="w"> </span><span class="l">ipcidr</span><span class="w">
</span><span class="w">  </span><span class="nt">url</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/telegramcidr.txt&#34;</span><span class="w">
</span><span class="w">  </span><span class="nt">path</span><span class="p">:</span><span class="w"> </span><span class="l">./ruleset/telegramcidr.yaml</span><span class="w">
</span><span class="w">  </span><span class="nt">interval</span><span class="p">:</span><span class="w"> </span><span class="m">86400</span><span class="w">
</span><span class="w">
</span><span class="w"></span><span class="nt">cncidr</span><span class="p">:</span><span class="w">
</span><span class="w"></span><span class="c"># 中国IP段</span><span class="w">
</span><span class="w">  </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">http</span><span class="w">
</span><span class="w">  </span><span class="nt">behavior</span><span class="p">:</span><span class="w"> </span><span class="l">ipcidr</span><span class="w">
</span><span class="w">  </span><span class="nt">url</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/cncidr.txt&#34;</span><span class="w">
</span><span class="w">  </span><span class="nt">path</span><span class="p">:</span><span class="w"> </span><span class="l">./ruleset/cncidr.yaml</span><span class="w">
</span><span class="w">  </span><span class="nt">interval</span><span class="p">:</span><span class="w"> </span><span class="m">86400</span><span class="w">
</span><span class="w">
</span><span class="w"></span><span class="nt">lancidr</span><span class="p">:</span><span class="w">
</span><span class="w"></span><span class="c"># 局域网IP段</span><span class="w">
</span><span class="w">  </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">http</span><span class="w">
</span><span class="w">  </span><span class="nt">behavior</span><span class="p">:</span><span class="w"> </span><span class="l">ipcidr</span><span class="w">
</span><span class="w">  </span><span class="nt">url</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/lancidr.txt&#34;</span><span class="w">
</span><span class="w">  </span><span class="nt">path</span><span class="p">:</span><span class="w"> </span><span class="l">./ruleset/lancidr.yaml</span><span class="w">
</span><span class="w">  </span><span class="nt">interval</span><span class="p">:</span><span class="w"> </span><span class="m">86400</span><span class="w">
</span><span class="w">
</span><span class="w"></span><span class="nt">proxies</span><span class="p">:</span><span class="w">
</span><span class="w"></span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;ss1&#39;</span><span class="w">
</span><span class="w">  </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">ss</span><span class="w">
</span><span class="w">  </span><span class="nt">server</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;your-server.com&#39;</span><span class="w">
</span><span class="w">  </span><span class="nt">port</span><span class="p">:</span><span class="w"> </span><span class="m">2333</span><span class="w">
</span><span class="w">  </span><span class="nt">cipher</span><span class="p">:</span><span class="w"> </span><span class="l">rc4-md5</span><span class="w">
</span><span class="w">  </span><span class="nt">password</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;your-password&#39;</span><span class="w">
</span><span class="w"></span>- {<span class="w"> </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;vmess2&#34;</span><span class="nt">, type: vmess, server: server, port: 443, uuid: uuid, alterId: 32, cipher: auto, tls</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w"> </span>}<span class="w"> 
</span><span class="w">
</span><span class="w"></span><span class="nt">proxy-groups</span><span class="p">:</span><span class="w">
</span><span class="w"></span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;auto&#39;</span><span class="w">
</span><span class="w">  </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">url-test</span><span class="w">
</span><span class="w">  </span><span class="nt">proxies</span><span class="p">:</span><span class="w"> 
</span><span class="w">    </span>- <span class="l">ss1</span><span class="w">
</span><span class="w">    </span>- <span class="l">vmess2</span><span class="w">
</span><span class="w">  </span><span class="nt">url</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;https://www.gstatic.com/generate_204&#39;</span><span class="w">
</span><span class="w">  </span><span class="nt">interval</span><span class="p">:</span><span class="w"> </span><span class="m">300</span><span class="w">
</span><span class="w"></span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;Proxy&#39;</span><span class="w">
</span><span class="w">  </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">select</span><span class="w">
</span><span class="w">  </span><span class="nt">proxies</span><span class="p">:</span><span class="w"> 
</span><span class="w">    </span>- <span class="l">auto</span><span class="w">
</span><span class="w">    </span>- <span class="l">ss1</span><span class="w">
</span><span class="w">    </span>- <span class="l">vmess2</span><span class="w">
</span><span class="w"></span><span class="nt">rules</span><span class="p">:</span><span class="w">
</span><span class="w"></span>- <span class="l">PROCESS-NAME,v2ray,DIRECT</span><span class="w">
</span><span class="w"></span>- <span class="l">PROCESS-NAME,Surge%203,DIRECT</span><span class="w">
</span><span class="w"></span>- <span class="l">PROCESS-NAME,ss-local,DIRECT</span><span class="w">
</span><span class="w"></span>- <span class="l">PROCESS-NAME,privoxy,DIRECT</span><span class="w">
</span><span class="w"></span>- <span class="l">PROCESS-NAME,trojan,DIRECT</span><span class="w">
</span><span class="w"></span>- <span class="l">PROCESS-NAME,trojan-go,DIRECT</span><span class="w">
</span><span class="w"></span>- <span class="l">PROCESS-NAME,naive,DIRECT</span><span class="w">
</span><span class="w"></span>- <span class="l">PROCESS-NAME,Thunder,DIRECT</span><span class="w">
</span><span class="w"></span>- <span class="l">PROCESS-NAME,DownloadService,DIRECT</span><span class="w">
</span><span class="w"></span>- <span class="l">PROCESS-NAME,qBittorrent,DIRECT</span><span class="w">
</span><span class="w"></span>- <span class="l">PROCESS-NAME,Transmission,DIRECT</span><span class="w">
</span><span class="w"></span>- <span class="l">PROCESS-NAME,fdm,DIRECT</span><span class="w">
</span><span class="w"></span>- <span class="l">PROCESS-NAME,aria2c,DIRECT</span><span class="w">
</span><span class="w"></span>- <span class="l">PROCESS-NAME,Folx,DIRECT</span><span class="w">
</span><span class="w"></span>- <span class="l">PROCESS-NAME,NetTransport,DIRECT</span><span class="w">
</span><span class="w"></span>- <span class="l">PROCESS-NAME,uTorrent,DIRECT</span><span class="w">
</span><span class="w"></span>- <span class="l">PROCESS-NAME,WebTorrent,DIRECT</span><span class="w">
</span><span class="w"></span>- <span class="l">DOMAIN,animebytes.tv,DIRECT</span><span class="w">
</span><span class="w"></span>- <span class="l">DOMAIN,clash.razord.top,DIRECT</span><span class="w">
</span><span class="w"></span>- <span class="l">DOMAIN,yacd.haishan.me,DIRECT</span><span class="w">
</span><span class="w"></span>- <span class="l">DOMAIN,embyserver.media,EMBY</span><span class="w">
</span><span class="w"></span>- <span class="l">RULE-SET,reject,🛑 全球拦截</span><span class="w">
</span><span class="w"></span>- <span class="l">RULE-SET,icloud,DIRECT</span><span class="w">
</span><span class="w"></span>- <span class="l">RULE-SET,apple,DIRECT</span><span class="w">
</span><span class="w"></span>- <span class="l">RULE-SET,google,DIRECT</span><span class="w">
</span><span class="w"></span>- <span class="l">RULE-SET,lancidr,DIRECT</span><span class="w">
</span><span class="w"></span>- <span class="l">RULE-SET,proxy,🔰 节点选择</span><span class="w">
</span><span class="w"></span>- <span class="l">RULE-SET,greatfire,🔰 节点选择</span><span class="w">
</span><span class="w"></span>- <span class="l">RULE-SET,gfw,🔰 节点选择</span><span class="w">
</span><span class="w"></span>- <span class="l">RULE-SET,telegramcidr,📲 电报信息</span><span class="w">
</span><span class="w"></span>- <span class="l">RULE-SET,direct,DIRECT</span><span class="w">
</span><span class="w"></span>- <span class="l">GEOIP,CN,DIRECT</span><span class="w">
</span><span class="w"></span>- <span class="l">MATCH,🐟 漏网之鱼</span><span class="w">
</span></code></pre></div><p>








<a href="https://github.com/Loyalsoldier/clash-rules" >Clash Premium 规则集</a>









<a href="https://lancellc.gitbook.io/clash/" >wiki</a>









<a href="https://github.com/Dreamacro/clash/wiki" >官方wiki</a></p>
<p>看wiki, 加了h2的vmess节点, 添加成功。</p>
<div class="highlight"><pre class="chroma"><code class="language-yaml" data-lang="yaml"><span class="nt">proxies</span><span class="p">:</span><span class="w">
</span><span class="w"></span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;vmess-h2&#34;</span><span class="w">
</span><span class="w">  </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">vmess</span><span class="w">
</span><span class="w">  </span><span class="nt">server</span><span class="p">:</span><span class="w"> </span><span class="l">server</span><span class="w">
</span><span class="w">  </span><span class="nt">port</span><span class="p">:</span><span class="w"> </span><span class="m">443</span><span class="w">
</span><span class="w">  </span><span class="nt">uuid</span><span class="p">:</span><span class="w"> </span><span class="l">uuid</span><span class="w">
</span><span class="w">  </span><span class="nt">alterId</span><span class="p">:</span><span class="w"> </span><span class="m">32</span><span class="w">
</span><span class="w">  </span><span class="nt">cipher</span><span class="p">:</span><span class="w"> </span><span class="l">auto</span><span class="w">
</span><span class="w">  </span><span class="nt">network</span><span class="p">:</span><span class="w"> </span><span class="l">h2</span><span class="w">
</span><span class="w">  </span><span class="nt">tls</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">
</span><span class="w">  </span><span class="nt">h2-opts</span><span class="p">:</span><span class="w">
</span><span class="w">    </span><span class="nt">host</span><span class="p">:</span><span class="w">
</span><span class="w">      </span>- <span class="l">http.example.com</span><span class="w">
</span><span class="w">      </span>- <span class="l">http-alt.example.com</span><span class="w">
</span><span class="w">    </span><span class="nt">path</span><span class="p">:</span><span class="w"> </span><span class="l">/</span><span class="w">
</span></code></pre></div><p>docker-compose.yml内容如下。ui换成yacd。version改为3.7就报错，查阅后发现是docker和docker-compose版本不是最新的原因。 在线网页<code>clash.razord.top</code>和<code>yacd.haishan.me</code>。</p>
<div class="highlight"><pre class="chroma"><code class="language-yml" data-lang="yml"><span class="nt">version</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;3.6&#39;</span><span class="w">
</span><span class="w"></span><span class="nt">services</span><span class="p">:</span><span class="w">
</span><span class="w">  </span><span class="nt">clash</span><span class="p">:</span><span class="w">
</span><span class="w">    </span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">dreamacro/clash-premium:latest</span><span class="w">
</span><span class="w">    </span><span class="c">#devices:</span><span class="w">
</span><span class="w">      </span><span class="c">#- /dev/net/tun</span><span class="w">
</span><span class="w">    </span><span class="nt">volumes</span><span class="p">:</span><span class="w">
</span><span class="w">      </span>- <span class="l">./config.yaml:/root/.config/clash/config.yaml</span><span class="w">
</span><span class="w">      </span>- <span class="l">./yacd-gh-pages:/ui</span><span class="w">
</span><span class="w">    </span><span class="nt">ports</span><span class="p">:</span><span class="w">
</span><span class="w">      </span>- <span class="s2">&#34;7890:7890&#34;</span><span class="w">
</span><span class="w">      </span><span class="c">#- &#34;7891:7891&#34;</span><span class="w">
</span><span class="w">      </span>- <span class="s2">&#34;7892:7892&#34;</span><span class="w">
</span><span class="w">      </span>- <span class="s2">&#34;9090:9090&#34;</span><span class="w">
</span><span class="w">      </span>- <span class="s2">&#34;1053:1053&#34;</span><span class="w">
</span><span class="w">    </span><span class="nt">restart</span><span class="p">:</span><span class="w"> </span><span class="l">always</span><span class="w">
</span><span class="w">    </span><span class="nt">network_mode</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;host&#34;</span><span class="w">
</span><span class="w">    </span><span class="nt">container_name</span><span class="p">:</span><span class="w"> </span><span class="l">clash</span><span class="w">
</span></code></pre></div>
      ]]></content></entry><entry><title>托管在Netlify的博客更改记录</title><id>https://ywycd.github.io/post/netlify-some-changes/</id><link href="https://ywycd.github.io/post/netlify-some-changes/" rel="alternate" type="text/html"/><updated>2021-03-28T06:36:08Z</updated><published>2021-03-28T02:55:31Z</published><description>切换Git分支 切换为 main 两边博客分支不同，看灯大博客可以修改分支，开始操作。 git checkout master git branch -m main # 删除本地分支 git branch -d master # 删除远程分支 git push origin …</description><content type="html"><![CDATA[
        <h2 id="切换git分支">切换Git分支</h2>
<h3 id="切换为-main">切换为 main</h3>
<p>两边博客分支不同，看灯大博客可以修改分支，开始操作。</p>
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">git checkout master

git branch -m main

<span class="c1"># 删除本地分支</span>
git branch -d master

<span class="c1"># 删除远程分支</span>
git push origin --delete master

<span class="c1"># （并不是真正想push, 只是隐式地将远程分支设置为了跟踪main)</span>
git push origin -u main

</code></pre></div><h3 id="网站配置">网站配置</h3>
<p>在 Github repo 设置 -&gt; Branches 里, 将默认分支设置为 main。</p>
<p>Netlify Build 设置里将默认分支设置成 main。</p>
<h2 id="集成-netlify-cms">集成 Netlify CMS</h2>
<h3 id="相关介绍">相关介绍</h3>
<p>Netlify CMS 主要是解决了，随时随地打开浏览器写markdown博客的问题，同时它自动处理了图片上传等问题。编辑器可以在富文本（所见即所得）和 Markdown 方式之间切换，Markdown模式没有语法高亮显示。</p>
<blockquote>
<p>Netlify CMS = web 版的 markdown 文件管理器 + 自动图片上传并插入markdown代码 + 在web浏览器写markdown并自动推送到git仓库构建 ….</p>
</blockquote>
<h3 id="部署方法">部署方法</h3>
<p>在<code>static</code> 目录下新建<code>admin</code>目录，里面放一个<code>index.html</code> 文件作为后台管理的入口。
<code>static/admin/index.html</code> 内容如下：</p>
<div class="highlight"><pre class="chroma"><code class="language-html" data-lang="html"><span class="cp">&lt;!doctype html&gt;</span>
<span class="p">&lt;</span><span class="nt">html</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">head</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">meta</span> <span class="na">charset</span><span class="o">=</span><span class="s">&#34;utf-8&#34;</span> <span class="p">/&gt;</span>
  <span class="p">&lt;</span><span class="nt">meta</span> <span class="na">name</span><span class="o">=</span><span class="s">&#34;viewport&#34;</span> <span class="na">content</span><span class="o">=</span><span class="s">&#34;width=device-width, initial-scale=1.0&#34;</span> <span class="p">/&gt;</span>
  <span class="p">&lt;</span><span class="nt">title</span><span class="p">&gt;</span>Blog Manager<span class="p">&lt;/</span><span class="nt">title</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">script</span> <span class="na">src</span><span class="o">=</span><span class="s">&#34;https://identity.netlify.com/v1/netlify-identity-widget.js&#34;</span><span class="p">&gt;&lt;/</span><span class="nt">script</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">head</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">body</span><span class="p">&gt;</span>
  <span class="c">&lt;!-- Include the script that builds the page and powers Netlify CMS --&gt;</span>
  <span class="c">&lt;!-- https://www.jsdelivr.com/package/npm/netlify-cms --&gt;</span>
  <span class="p">&lt;</span><span class="nt">script</span> <span class="na">src</span><span class="o">=</span><span class="s">&#34;https://cdn.jsdelivr.net/npm/netlify-cms@2.10.96/dist/netlify-cms.min.js&#34;</span><span class="p">&gt;&lt;/</span><span class="nt">script</span><span class="p">&gt;</span>

<span class="p">&lt;/</span><span class="nt">body</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">html</span><span class="p">&gt;</span>
</code></pre></div><p><code>static/admin/config.yml</code> 内容如下：</p>
<div class="highlight"><pre class="chroma"><code class="language-yml" data-lang="yml"><span class="c"># https://www.netlifycms.org/docs/add-to-your-site/</span><span class="w">
</span><span class="w"></span><span class="nt">backend</span><span class="p">:</span><span class="w">
</span><span class="w">  </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">git-gateway</span><span class="w">
</span><span class="w">  </span><span class="nt">branch</span><span class="p">:</span><span class="w"> </span><span class="l">main</span><span class="w"> </span><span class="c"># Branch to update (optional; defaults to master)</span><span class="w">
</span><span class="w">  </span><span class="nt">squash_merges</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w"> </span><span class="c"># beta feature</span><span class="w">
</span><span class="w">
</span><span class="w"> </span><span class="c"># when using the default proxy server port</span><span class="w">
</span><span class="w"> </span><span class="c"># Run npx netlify-cms-proxy-server from the root dir of the repo</span><span class="w">
</span><span class="w"></span><span class="nt">local_backend</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">
</span><span class="w">
</span><span class="w"></span><span class="c"># 编辑工作流程</span><span class="w">
</span><span class="w"></span><span class="nt">publish_mode</span><span class="p">:</span><span class="w"> </span><span class="l">editorial_workflow</span><span class="w">
</span><span class="w">
</span><span class="w">
</span><span class="w"></span><span class="c"># 全局静态文件上传目录</span><span class="w">
</span><span class="w"></span><span class="nt">media_folder</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;static/img/uploads&#34;</span><span class="w"> </span><span class="c"># Media files will be stored in the repo under images/uploads</span><span class="w">
</span><span class="w"></span><span class="nt">public_folder</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;/img/uploads&#34;</span><span class="w"> </span><span class="c"># The src attribute for uploaded media will begin with /images/uploads</span><span class="w">
</span><span class="w">
</span><span class="w"></span><span class="nt">media_folder_relative</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">
</span><span class="w">
</span><span class="w">
</span><span class="w"></span><span class="nt">collections</span><span class="p">:</span><span class="w">
</span><span class="w">  </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;post&#34;</span><span class="w"> </span><span class="c"># Used in routes, e.g., /admin/collections/blog</span><span class="w">
</span><span class="w">    </span><span class="nt">label</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;Post&#34;</span><span class="w"> </span><span class="c"># Used in the UI</span><span class="w">
</span><span class="w">    </span><span class="nt">folder</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;content/post&#34;</span><span class="w"> </span><span class="c"># The path to the folder where the documents are stored</span><span class="w">
</span><span class="w">    </span><span class="nt">path</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;{{slug}}/index&#39;</span><span class="w"> </span><span class="c"># beta feature</span><span class="w">
</span><span class="w">    </span><span class="nt">media_folder</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;&#39;</span><span class="w">
</span><span class="w">    </span><span class="nt">public_folder</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;&#39;</span><span class="w">
</span><span class="w">    </span><span class="c"># adding a nested object will show the collection folder structure</span><span class="w">
</span><span class="w">    </span><span class="nt">nested</span><span class="p">:</span><span class="w">
</span><span class="w">      </span><span class="nt">depth</span><span class="p">:</span><span class="w"> </span><span class="m">100</span><span class="w"> </span><span class="c"># max depth to show in the collection tree</span><span class="w">
</span><span class="w">      </span><span class="nt">summary</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;{{title}}&#39;</span><span class="w"> </span><span class="c"># optional summary for a tree node, defaults to the inferred title field</span><span class="w">
</span><span class="w">    </span><span class="c"># adding a meta object with a path property allows editing the path of entries</span><span class="w">
</span><span class="w">    </span><span class="c"># moving an existing entry will move the entire sub tree of the entry to the new location</span><span class="w">
</span><span class="w">    </span><span class="nt">meta</span><span class="p">:</span><span class="w"> </span>{<span class="w"> </span><span class="nt">path</span><span class="p">:</span><span class="w"> </span>{<span class="w"> </span><span class="nt">widget: string, label: &#39;Path&#39;, index_file: &#39;index&#39;, hint</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;markdown文件路径, 对于page bundle, 如 &#34;一级目录/二级目录/page-bundle目录/index.md&#34;, 只需要填写 &#34;一级目录/二级目录/page-bundle目录&#34;,不
</span><span class="s1">要忘记填写page-bundle目录&#39;</span><span class="w"> </span>}<span class="w"> </span>}<span class="w">
</span><span class="w">    </span><span class="nt">create</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w"> </span><span class="c"># Allow users to create new documents in this collection</span><span class="w">
</span><span class="w">    </span><span class="nt">slug</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;{{year}}-{{month}}-{{day}}-{{slug}}&#34;</span><span class="w"> </span><span class="c"># Filename template, e.g., YYYY-MM-DD-title.md</span><span class="w">
</span><span class="w">    </span><span class="nt">fields</span><span class="p">:</span><span class="w"> </span><span class="c"># The fields for each document, usually in front matter</span><span class="w">
</span><span class="w">      </span>- {<span class="nt">label</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;Title&#34;</span><span class="nt">, name</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;title&#34;</span><span class="nt">, widget</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;string&#34;</span><span class="nt">, hint</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;文章标题&#34;</span>}<span class="w">
</span><span class="w">      </span>- {<span class="nt">label</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;Slug&#34;</span><span class="nt">, name</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;slug&#34;</span><span class="nt">, widget</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;string&#34;</span><span class="nt">, required: false, hint</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;Slug可以是目录,如 linux/archlinux, 此项会作为路径的功能可能会被 path meta 覆盖&#34;</span>}<span class="w">
</span><span class="w">      </span>- {<span class="nt">label</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;Draft&#34;</span><span class="nt">, name</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;draft&#34;</span><span class="nt">, widget</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;boolean&#34;</span><span class="nt">, default: true, hint</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;草稿不会 build&#34;</span>}<span class="w">
</span><span class="w">      </span>- {<span class="nt">label</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;Publish Date&#34;</span><span class="nt">, name</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;date&#34;</span><span class="nt">, widget</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;datetime&#34;</span>}<span class="w">
</span><span class="w">      </span>- {<span class="nt">label</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;Tags&#34;</span><span class="nt">, name</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;tags&#34;</span><span class="nt">, widget</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;list&#34;</span><span class="nt">, required</span><span class="p">:</span><span class="w"> </span><span class="kc">false</span><span class="p">,</span><span class="w"> </span><span class="s2">&#34;文章标签，用半角逗号分隔&#34;</span>}<span class="w">
</span><span class="w">      </span>- {<span class="nt">label</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;Body&#34;</span><span class="nt">, name</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;body&#34;</span><span class="nt">, widget</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;markdown&#34;</span><span class="nt">, hint</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;博客正文&#34;</span>}<span class="w">
</span></code></pre></div><h3 id="本地git仓库模式">本地Git仓库模式</h3>
<p>简单启用，只需要在 <code>config.yml</code> 中添加 <code>local_backend: true</code> 即可。 然后 <code>npx netlify-cms-proxy-server</code> 启动 proxy 即可，它默认监听 8081 端口。 然后通过 hugo serve 启动，然后访问 <code>http://localhost:1313/admin/ </code>即可。</p>
<h3 id="启用cms">启用CMS</h3>
<p>上面文件创建后，推送到git。点开<code>https://xxx.netlify.app/admin/</code>提示没有<code>Git Gateway</code>。








<a href="https://docs.netlify.com/visitor-access/git-gateway/#setup-and-settings" >启用git-gateway</a> 介绍，进netlify网页Site settings &gt; Identity, 先<code>enable Identity service</code>。Identity &gt; Services &gt; Git Gateway, 选择<code>Enable Git Gateway</code>，同时生成token。







<a class="post-img-lb" href="https://i.endpot.com/image/BXLGV/snipaste_20210328_135751.png" data-caption="snipaste_20210328_135751.png">
    <img src="https://i.endpot.com/image/BXLGV/snipaste_20210328_135751.png" alt="snipaste_20210328_135751.png"  />
</a>
再访问<code>https://xxx.netlify.app/admin/</code>注册账号，点击邮箱验证身份(博客地址加token)。但后面登陆时提示未激活。查阅








<a href="https://docs.netlify.com/visitor-access/identity/registration-login/#add-identity-users" >注册</a> 后在External providers里选了github，授权登陆成功。后面测试邮箱可登陆，再不行可设置无验证。







<a class="post-img-lb" href="https://i.endpot.com/image/VCV0O/snipaste_20210328_140555.png" data-caption="snipaste_20210328_140555.png">
    <img src="https://i.endpot.com/image/VCV0O/snipaste_20210328_140555.png" alt="snipaste_20210328_140555.png"  />
</a>







<a class="post-img-lb" href="https://i.endpot.com/image/AT1KL/snipaste_20210328_140747.png" data-caption="snipaste_20210328_140747.png">
    <img src="https://i.endpot.com/image/AT1KL/snipaste_20210328_140747.png" alt="snipaste_20210328_140747.png"  />
</a>
这里可查看注册账号，在Roles里可设置管理员权限。







<a class="post-img-lb" href="https://i.endpot.com/image/JGXWC/snipaste_20210328_141150.png" data-caption="snipaste_20210328_141150.png">
    <img src="https://i.endpot.com/image/JGXWC/snipaste_20210328_141150.png" alt="snipaste_20210328_141150.png"  />
</a>
改为邀请注册，免费只能邀请5人。开放注册1000人，算活跃人数。</p>
<p><del>使用CMS编辑文章，打字经常字符消失，打不完一整句，切换模式也这样。编辑好保存，是pull requests到仓库，tags格式改变。还是电脑码字发布吧。</del></p>

      ]]></content></entry><entry><title>Termux笔记</title><id>https://ywycd.github.io/post/termux-note/</id><link href="https://ywycd.github.io/post/termux-note/" rel="alternate" type="text/html"/><updated>2021-03-28T06:36:08Z</updated><published>2021-03-27T07:55:42Z</published><description>前言 Termux是An­droid终端模拟器，手机下载安装打开即可。支持 apt、pkg软件包管理，而且完美支持 Python、PHP、Ruby</description><content type="html"><![CDATA[
        <h2 id="前言">前言</h2>
<p>Termux是An­droid终端模拟器，手机下载安装打开即可。支持 apt、pkg软件包管理，而且完美支持 Python、PHP、Ruby、Go、Nodejs、MySQL 等工具。你还可以用它安装Linux系统，可以做很多事情。第一次是从酷安下载提示网络问题，看评论区知道酷安版不完整。转去play下载。play插件收费，而在F-Droid商店上免费。后面play不再更新，换到F-Droid版。官方有提供








<a href="https://wiki.termux.com/wiki/Backing_up_Termux" >备份和恢复</a> 方案。文章根据国光大佬、酷安分享、p3terx教程，自己总结记录。</p>
<div class="highlight"><pre class="chroma"><code class="language-shell" data-lang="shell">termux-setup-storage
<span class="nb">cd</span> /data/data/com.termux/files
<span class="c1"># 备份</span>
tar -zcvf /sdcard/termux-backup.tar.gz home usr
<span class="c1"># 恢复</span>
tar -zxf /sdcard/termux-backup.tar.gz --recursive-unlink --preserve-permissions
</code></pre></div><p>转移成功，开屏问候语改变。其他基本没变化。</p>
<h2 id="基本操作">基本操作</h2>
<h3 id="选项和菜单">选项和菜单</h3>
<p>长按屏幕会调出显示菜单项（包括复制、粘贴、更多），方便我们进行复制或者粘贴。</p>
<p>






<a class="post-img-lb" href="https://image.3001.net/images/20200418/15872022768181.png" data-caption="">
    <img src="https://image.3001.net/images/20200418/15872022768181.png" alt=""  />
</a></p>
<p>More 菜单的说明如下：</p>
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">长按屏幕
├── COPY:    <span class="c1"># 复制</span>
├── PASTE:   <span class="c1"># 粘贴</span>
├── More:    <span class="c1"># 更多</span>
   ├── Select URL:             <span class="c1"># 提取屏幕所有网址</span>
   └── Share transcipt:        <span class="c1"># 分享命令脚本</span>
   └── Reset:                  <span class="c1"># 重置</span>
   └── Kill process:           <span class="c1"># 杀掉当前会话进程</span>
   └── Style:                  <span class="c1"># 风格配色 需要自行安装</span>
   └── Keep screen on:         <span class="c1"># 保持屏幕常亮</span>
   └── Help:                   <span class="c1"># 帮助文档</span>
</code></pre></div><p>左侧屏幕向右滑出来导航栏，可选收起/弹出键盘，新建/切换会话(ses­sion) 。通知栏会显示有多少会话。</p>
<p>






<a class="post-img-lb" href="https://image.3001.net/images/20200418/15872022029549.png" data-caption="">
    <img src="https://image.3001.net/images/20200418/15872022029549.png" alt=""  />
</a></p>
<h3 id="常用快捷">常用快捷</h3>
<p><code>音量减</code>模拟 <code>Ctrl</code> 键。下面列一些常用的按键。</p>
<ul>
<li><code>Ctrl + A</code> -&gt; 将光标移动到行首</li>
<li><code>Ctrl + C</code> -&gt; 中止当前进程</li>
<li><code>Ctrl + D</code> -&gt; 注销终端会话</li>
<li><code>Ctrl + E</code> -&gt; 将光标移动到行尾</li>
<li><code>Ctrl + K</code> -&gt; 从光标删除到行尾</li>
<li><code>Ctrl + U</code> -&gt; 从光标删除到行首</li>
<li><code>Ctrl + L</code> -&gt; 相当于<code>clear</code>命令，清屏</li>
<li><code>Ctrl + Z</code> -&gt; 挂起（发送 SIGTSTP 到）当前进程</li>
</ul>
<p><code>音量加</code>也可以作为产生特定输入的<code>特殊键</code>.</p>
<ul>
<li><code>音量加 + E</code> -&gt; Esc键</li>
<li><code>音量加 + T</code> -&gt; Tab键</li>
<li><code>音量加 + 1</code> -&gt; F1（<code>音量增加 + 2</code> → F2…以此类推）</li>
<li><code>音量加 + 0</code> -&gt; F10</li>
</ul>
<h3 id="定制常用按键">定制常用按键</h3>
<p>我们可以通过 <code>~/.termux/termux.properties</code> 文件来进行定制。默认不存在，先创建这个文件。当时刚下载自己设置（看了教程，已创建目录）失败后卸载。后面安装借用酷安NibaZShab配置好的when，成功设置按键、安装fish终端、screenfetch等。后续有修改，博客做个记录。
自用按键表</p>
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">extra-keys <span class="o">=</span> <span class="o">[</span> <span class="se">\ </span><span class="o">[</span><span class="s1">&#39;ESC&#39;</span>,<span class="s1">&#39;|&#39;</span>,<span class="s1">&#39;/&#39;</span>,<span class="s1">&#39;PGUP&#39;</span>,<span class="s1">&#39;UP&#39;</span>,<span class="s1">&#39;PDDN&#39;</span>,<span class="s1">&#39;END&#39;</span><span class="o">]</span>, <span class="se">\ </span><span class="o">[</span><span class="s1">&#39;TAB&#39;</span>,<span class="s1">&#39;CTRL&#39;</span>,<span class="s1">&#39;ALT&#39;</span>,<span class="s1">&#39;LEFT&#39;</span>,<span class="s1">&#39;DOWN&#39;</span>,<span class="s1">&#39;RIGHT&#39;</span>,<span class="s1">&#39;ENTER&#39;</span><span class="o">]</span> <span class="se">\ </span><span class="o">]</span>

</code></pre></div><p>






<a class="post-img-lb" href="http://i.endpot.com/image/A4R0C/IMG_20210328_095759.jpg" data-caption="IMG_20210328_095759.jpg">
    <img src="http://i.endpot.com/image/A4R0C/IMG_20210328_095759.jpg" alt="IMG_20210328_095759.jpg"  />
</a></p>
<h3 id="基本命令">基本命令</h3>
<p>Termux 除了支持 <code>apt</code> 命令外，还在此基础上封装了<code>pkg</code>命令，<code>pkg</code> 命令向下兼容 <code>apt</code> 命令。执行 <code>pkg upgrade</code> 相当于执行了 <code>apt update &amp;&amp; apt upgrade</code>，简化了操作流程。
pkg命令如下。</p>
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">pkg search &lt;query&gt;              <span class="c1"># 搜索包</span>
pkg install &lt;package&gt;           <span class="c1"># 安装包</span>
pkg uninstall &lt;package&gt;         <span class="c1"># 卸载包</span>
pkg reinstall &lt;package&gt;         <span class="c1"># 重新安装包</span>
pkg update                      <span class="c1"># 更新源</span>
pkg upgrade                     <span class="c1"># 升级软件包</span>
pkg list-all                    <span class="c1"># 列出可供安装的所有包</span>
pkg list-installed              <span class="c1"># 列出已经安装的包</span>
pkg show &lt;package&gt;              <span class="c1"># 显示某个包的详细信息</span>
pkg files &lt;package&gt;             <span class="c1"># 显示某个包的相关文件夹路径</span>
</code></pre></div><p>安装一些常用工具，方便后续操作。</p>
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">pkg i -y curl wget tree vim nano git
</code></pre></div><h3 id="修改问候语">修改问候语</h3>
<p><code>vim $PREFIX/etc/motd</code>换成你想显示的。也可以使用<code>touch ~/.hushlogin</code>让它不显示。</p>
<h3 id="目录结构">目录结构</h3>
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash"><span class="nb">echo</span> <span class="nv">$HOME</span>
/data/data/com.termux/files/home

<span class="nb">echo</span> <span class="nv">$PREFIX</span>
/data/data/com.termux/files/usr

<span class="nb">echo</span> <span class="nv">$TMPDIR</span>
/data/data/com.termux/files/usr/tmp/
</code></pre></div><h3 id="root权限">root权限</h3>
<p>可以利用<code>proot</code>可以为手机没有root的用户来模拟一个root的环境。手机已root，推荐使用tsu，<code>pkg install tsu -y</code>。</p>
<blockquote>
<p>tsu，这是一个<code>su</code>的 Termux 版本，是一个真正的root权限，用来在termux上替代<code>su</code>。</p>
</blockquote>
<h3 id="缩放文本">缩放文本</h3>
<p>可以使用缩放手势（双指放大缩小）来调整其字体大小。







<a class="post-img-lb" href="https://image.3001.net/images/20200418/15872024914185.png" data-caption="">
    <img src="https://image.3001.net/images/20200418/15872024914185.png" alt=""  />
</a></p>
<h2 id="进阶配置">进阶配置</h2>
<h3 id="adb连接">adb连接</h3>
<p>酷安ID萌系生物研究员分享，安装adb和fastboot。</p>
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">pkg update
pkg i -y git
<span class="nb">cd</span> ~
git clone https://github.com/Magisk-Modules-Repo/adb-ndk.git 
<span class="nb">cd</span> ./adb-ndk/bin/
mv -f adb.bin adb
chmod +x ./*
mv -f ./* <span class="nv">$PREFIX</span>/bin/
<span class="nb">cd</span> ~
rm -rf adb-ndk/
</code></pre></div><p>可连接其他设备。有在线adb网站，测试需要usb连接手机，在局域网内。</p>
<p>换到F-Droid版，adb提示log文件无权限。新建修改权限，chmod，更改文件目录失败。重新安装可行。简单的方法，点开网络adb调试，有的开发者模式里没有，要借用其他app，需root。<code>adb devices</code>会出来权限弹窗，点接受就可以。</p>
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">adb disconnect
adb kill-server
adb devices
</code></pre></div><p>还不行就三连，重启手机。</p>
<h3 id="ssh服务">ssh服务</h3>
<p>同样萌系生物研究员大佬分享的教程。</p>
<p>安装openssh <code>pkg i -y openssh</code>，进行配置。</p>
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">mkdir -p <span class="nv">$PREFIX</span>/etc/ssh/ <span class="p">;</span> ssh-keygen -f ~/.ssh/id_rsa -t rsa -b <span class="m">4096</span> -N <span class="s1">&#39;&#39;</span> -m PEM <span class="p">;</span> cat ~/.ssh/id_rsa.pub &gt;&gt; ~/.ssh/authorized_keys <span class="p">;</span> chmod -R <span class="m">700</span> ~/.ssh/ <span class="p">;</span> chmod <span class="m">600</span> ~/.ssh/authorized_keys <span class="p">;</span> <span class="nb">echo</span> -e <span class="s2">&#34;port 8022\nPrintMotd yes\nPasswordAuthentication no\nSubsystem sftp /data/data/com.termux/files/usr/libexec/sftp-server\nPubkeyAuthentication yes\nPermitRootLogin yes\nAuthorizedKeysFile .ssh/authorized_keys&#34;</span> &gt; <span class="nv">$PREFIX</span>/etc/ssh/sshd_config <span class="p">;</span> pkill sshd <span class="p">;</span> sshd
</code></pre></div><p>设置密码，输入<code>passwd</code>进行设置。记得<code>pkill sshd &amp;&amp; sshd</code>重启sshd。</p>
<p>ssh服务网上还有其他教程，国光大佬教程就有电脑/Termux生成密钥的不同方法。</p>
<p>电脑连接termux，<code>ssh 192.168.x.x -p 8022 -i C:id_rsa</code>。Termux不需要设置用户名。win10cmd连接提示<code>Permissions for C:id_rsa are too open</code> 。<del>chmod 600 id_rsa复制到电脑失败，换成400也一样。</del></p>
<h3 id="传输文件">传输文件</h3>
<p>可以使用SSH自带的scp命令进行文件传输。</p>
<p>复制文件</p>
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash"><span class="c1"># scp 本地文件路径 远程主机用户名@远程主机名或IP:远程文件保存的位置路径</span>
scp local_file remote_username@remote_ip:remote_folder
</code></pre></div><p>复制目录</p>
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash"><span class="c1"># scp -r 本地文件夹路径 远程主机用户名@远程主机名或IP:远程文件夹保存的位置路径</span>
scp -r local_folder remote_username@remote_ip:remote_folder
</code></pre></div><h3 id="sftp">sftp</h3>
<p>一般情况下，开启sshd就会顺带帮你开sftp服务，方便管理termux的内部文件。另外下载termux:api，跟termux对应商店下载，不要混用。装完termux:api的apk后，还需要输<code>pkg i -y termux-api ; cat ~/.ssh/id_rsa | termux-clipboard-set</code>，这时候它会自动把私钥文本复制到剪切板。termux:api的其他用法国光的教程里有详细说明。termux其他插件，boot开机启动，widge桌面小部件etc。</p>
<p>打开solid explorer或其他支持sftp的文件管理器，新建云连接，选择sftp。远程主机名localhost,端口8022。验证方式选SSH私钥，用户名乱填，最后粘贴刚才自动复制的内容。实际路径<code>/data/data/com.termux/files/home</code>。</p>
<p>用termux建立软链接。比如新建QQ下载，这样可以<code>home</code>目录下去访问QQ文件夹。
<code>ln -s /data/data/com.termux/files/home/storage/shared/tencent/QQfile_recv QQ</code>。删除软链接，用<code>unlink</code>命令。测试<code>unlink QQ</code>可删除。







<a class="post-img-lb" href="https://image.3001.net/images/20200418/15872085834532.png" data-caption="">
    <img src="https://image.3001.net/images/20200418/15872085834532.png" alt=""  />
</a></p>
<h3 id="fish终端alias">fish终端alias</h3>
<p>照研究员教程加了alias，termux-clipboard-get 获取剪切板内容，termux-clipboard-set 写入剪切板。发现重进就消失。考虑是不是fish要换路径。查阅资料，发现fish是








<a href="https://fishshell.com/docs/current/cmds/alias.html?highlight=alias" >function</a> 设置。tsu看文件有无创建，同样操作切换为普通账户才能成功创建。</p>
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash"><span class="nb">alias</span> <span class="nv">get</span><span class="o">=</span><span class="s1">&#39;termux-clipboard-get&#39;</span>
<span class="c1"># This is equivalent to entering the following function</span>
<span class="k">function</span> get
    termux-clipboard-get <span class="nv">$argv</span>
end
<span class="c1"># save the function </span>
funcsave get
</code></pre></div><p>这样会保存在~/.config/fish/functions文件夹下，名为xx.fish。</p>
<h2 id="结尾">结尾</h2>
<p>这些还只是冰山一角，使用好Termux可以方便很多。</p>
<h2 id="参考文献">参考文献</h2>
<p>








<a href="https://www.sqlsec.com/2018/05/termux.html#toc-heading-165" >Termux 高级终端安装使用配置教程 | 国光</a></p>
<p>








<a href="https://p3terx.com/archives/termux-tutorial-1.html" >Termux 使用教程 - P3TERX</a></p>
<p>








<a href="https://wiki.termux.com/wiki/Main_Page" >Termux Wiki</a></p>

      ]]></content></entry><entry><title>Chfs设置</title><id>https://ywycd.github.io/post/chfs-advanced/</id><link href="https://ywycd.github.io/post/chfs-advanced/" rel="alternate" type="text/html"/><updated>2021-01-16T10:13:39Z</updated><published>2021-01-16T09:14:23Z</published><description>chfs文件共享服务器 自建网盘支持webdav，NextCloud功能太多。从 N1 docker 镜像分享找到了chfs。docker exec chfs addusr 用户名 密码 权限添</description><content type="html"><![CDATA[
        <p>chfs文件共享服务器</p>
<p>自建网盘支持webdav，NextCloud功能太多。从








<a href="https://www.right.com.cn/forum/thread-911375-1-1.html" >N1 docker 镜像分享</a>找到了chfs。<code>docker exec chfs addusr 用户名 密码 权限</code>添加账户，网页提示更新。








<a href="http://iscute.cn/chfs" >官网</a><br>
有分享文件需求，看了下其他








<a href="https://github.com/zhaojun1998/zfile" >zfile</a> 








<a href="https://larsjung.de/h5ai/" >h5ai</a>。先升级chfs，有








<a href="https://hub.docker.com/r/jonnyan404/chfs" >docker镜像</a>。根据介绍运行，不过不理想。配置<code>--path=/data</code>首页会显示分享。用<code>--path=&quot;d:\\projects|e:\\nsis&quot;</code>失败，应该是因为没映射目录。<br>
在目录下新建，但匿名会全部显示，研究rule。用<code>--rule=&quot;::r|ceshizu:ceshizu123:r:test:rwd&quot;</code>失败，修改重复测试，受到<code>--rule=&quot;::|</code>匿名用户什么权限都没有启发，<code>:::share:r|admin:admin123:rwd</code>成功（遗漏:失败过）。访问权限分为四种：&quot;&quot;(不可访问)，&ldquo;R&rdquo;(只读)，&ldquo;W&rdquo;(读写)，&ldquo;D&rdquo;(写+删除)。<br>
老是删除重建，考虑自定义配置文件<code>--file=/data/xxx.ini</code>，顺便加上https访问。一直默认配置，发现ini没保存，重新填写。








<a href="http://iscute.cn/asset/chfs.ini" >配置文件模板地址</a></p>
<div class="highlight"><pre class="chroma"><code class="language-docker" data-lang="docker">docker run --restart<span class="o">=</span>on-failure:3 -d --name chfs -p 8080:443  -v /path/you/dir:/data jonnyan404/chfs --file<span class="o">=</span>/data/xxx.ini<span class="err">
</span></code></pre></div><p>设置完毕。之前webdav配置要重新修改，不然网络出错（ssl证书问题）。</p>

      ]]></content></entry><entry><title>自动签到</title><id>https://ywycd.github.io/post/auto-chekin/</id><link href="https://ywycd.github.io/post/auto-chekin/" rel="alternate" type="text/html"/><updated>2021-01-09T09:33:19Z</updated><published>2021-01-09T07:30:25Z</published><description>开始会打开各app、网站，后面停了就懒得继续，手动太累。签到升级，获得更多的权限。简单介绍下相关工具。 qiandao 17年注册，中间邮箱一直提示签到失败</description><content type="html"><![CDATA[
        <p>开始会打开各app、网站，后面停了就懒得继续，手动太累。签到升级，获得更多的权限。简单介绍下相关工具。</p>
<h2 id="qiandao">qiandao</h2>
<p>17年注册，中间邮箱一直提示签到失败，全停。后面发现可以自己添加网站签到，重新使用。有的模板已经无法使用。可能chrome版本问题，现在用cookies获取工具（已运行）老是一串代码，无法删除。只能修改变量，手动填写。</p>
<p>官方 








<a href="https://github.com/binux/qiandao" >github</a>








<a href="https://binux.blog/2014/09/introduction-to-qiandao-today/" >blog</a>                             








<a href="https://qiandao.today/" >地址</a> 








<a href="https://qiandao.binux.me/" >备用</a><br>
分支: <a href="https://github.com/AragonSnow/qiandao">https://github.com/AragonSnow/qiandao</a> 还在更新<br>









<a href="https://github.com/binux/qiandao/blob/master/docs/har-howto.md" >制作签到模板</a>  进行签到，保存har文件，上传网站，编辑测试。保存后新建签到，可选时间间隔。某网站已经维护三次，更了解一点（技术小白言）。 可以自行docker搭建。<br>









<a href="https://www.quchao.net/QianDaoEXP.html" >QianDao.today签到平台高级使用不完全手册</a><br>
获取cookies，万能F12。或者用








<a href="https://www.crx4chrome.com/extensions/embffhododclmgpnabmjmgoekpnoboic/" >Get Cookie For FPlus</a>插件。<br>
感谢








<a href="https://www.youtube.com/watch?v=Sj_YkhSEtk4" >discuz 点击签到模板视频</a> ，学到了formhash和日志输出。</p>
<h2 id="贴吧云签到">贴吧云签到</h2>
<p>源码








<a href="https://github.com/MoeNetwork/Tieba-Cloud-Sign" >github</a>  








<a href="https://www.tieba.ga/index.php?mod=login" >网友搭建</a> 运行好多年。中间网站打不开，搜索到action








<a href="https://github.com/ghosx/tieba" >签到贴吧</a>。</p>
<h2 id="哔哩哔哩签到">哔哩哔哩签到</h2>
<p>之前挂在qiandao，发现漫画也有








<a href="https://github.com/srcrs/BilibiliTask" >签到</a>。有漫画兑换需求，








<a href="https://github.com/happy888888/BiliExp" >这个</a>功能更多，但定时老是晚几十分钟。手动抢了几次，能不能抢到靠运气。其他下载功能好用。Secrets变量用EditThisCookie。</p>
<h2 id="魂签到">魂签到</h2>
<p>官方








<a href="https://github.com/inu1255/soulsign-chrome" >GitHub</a>，一个chrome的插件，可以自动签到，每天只要打开浏览器就可以自动签到，不用填写账号密码，不用手动抓取cookie，只需要 添加脚本+登录账号。








<a href="https://soulsign.inu1255.cn/" >脚本发布站点</a>。








<a href="https://www.heji.ltd/405.html#" >该网站</a>介绍。</p>
<h2 id="其他">其他</h2>
<p>单网站，搜索网站+签到，看有没有前人造轮子。</p>

      ]]></content></entry><entry><title>路由器刷机记录</title><id>https://ywycd.github.io/post/router-record/</id><link href="https://ywycd.github.io/post/router-record/" rel="alternate" type="text/html"/><updated>2020-12-23T11:53:35Z</updated><published>2020-12-22T12:35:56Z</published><description>最开始买的tp-link，宿舍上了斐迅0元购（辛酸泪），接触刷机 恩山和 拆机。官改-breed刷高格-openwrt-Padavan养老。刷高</description><content type="html"><![CDATA[
        <p>最开始买的tp-link，宿舍上了斐迅0元购（辛酸泪），接触刷机








<a href="https://www.right.com.cn/forum/forum.php" >恩山</a>和








<a href="https://www.acwifi.net/" >拆机</a>。官改-breed刷高格-openwrt-Padavan养老。刷高格是为了多拨，实际未使用。高格改版（有纯净版加插件），插件添加失败，转到op阵营。op有一贴分享精简加插件，接触编译。杜绝隔段时间就刷机，换成老毛子。</p>
<h2 id="固件">固件</h2>
<p>恩山搜索型号，看有哪些固件可刷。目前有在使用op（插件丰富）、老毛子。








<a href="https://www.right.com.cn/forum/forum.php?mod=viewthread&amp;tid=344825&amp;extra=page%3D2%26filter%3Ddigest%26digest%3D1" >op插件</a>结合








<a href="https://github.com/coolsnowwolf/lede" >lede</a>说明编译，自建虚拟机科学或








<a href="https://p3terx.com/archives/build-openwrt-with-github-actions.html" >action</a>，曾经出现过








<a href="https://www.right.com.cn/forum/thread-1573038-1-1.html" >gitpod</a>。老毛子有








<a href="https://github.com/hanwckf/rt-n56u" >hanwckf</a>、








<a href="https://github.com/chongshengB/Padavan-build" >chongshengB</a>，感谢移植第一人荒野无灯，同样有








<a href="https://github.com/muziling/Padavan-build" >Action</a>。换hanwckf源插件添加不了，上虚拟机编译，没追新。</p>
<h2 id="插件">插件</h2>
<p>科学，别人分享的实操失败，不得不提ssr+/clash好用，设备上基本都换成小猫咪。<br>
DNS污染，tracker无法访问，开始dns-forwarder有用。后续失效








<a href="https://blog.minidump.info/2019/12/enhanced-coredns/" >修改版coredns</a>部署失败，换新域名解决。去广告，电脑用过adbyby，现在主要用uBlock Origin,订阅








<a href="https://gitee.com/halflife/list/raw/master/ad.txt" >halflife</a>，局域网adghome。<br>
内网vpn。编译过老毛子里的vpn，只有softethervpn成功，还有其他方案。</p>
<h2 id="ddns">DDNS</h2>
<p>动态公网ip，ddns域名+端口实现外网访问，远程操作。op的ddns脚本在<code>Network→IP Addresses and Names</code>选取。选








<a href="https://v2ex.com/t/560093" >哪家</a>,目前使用noip,he.net,cf，noip需要每30天激活，he需要域名，注册免费域名推荐freenom。<br>
但cf限制.tk等免费域名使用api，无法ddns、acme.sh。Github上有好多优秀工具。老毛子自带inadyn出错，运行curl提示<code>(60) Cert verify failed</code>。借用某人脚本，加上-sk可行,cf的








<a href="https://ignorance.nova.moe/ddns-with-cloudflare/" >curl</a>。wan重连运行脚本，不用隔5分钟测ip变化。老毛子添加脚本，<strong>系统管理-配置管理-保存</strong>，不然重启丢失。</p>
<div class="highlight"><pre class="chroma"><code class="language-shell" data-lang="shell">curl -sk -4 <span class="s2">&#34;https://dyn.example.com:password@dyn.dns.he.net/nic/update?hostname=dyn.example.com&#34;</span>					
curl -sk https://username:password@dynupdate.no-ip.com/nic/update?hostname<span class="o">=</span>example.com

<span class="nv">home_ip</span><span class="o">=</span><span class="k">$(</span>curl ip.sb<span class="k">)</span>
curl -sk -X PUT <span class="s2">&#34;https://api.cloudflare.com/client/v4/zones/&lt;域名的 ZoneID&gt;/dns_records/&lt;Record 的 ZoneID&gt;&#34;</span> <span class="se">\
</span><span class="se"></span>     -H <span class="s2">&#34;Authorization: Bearer xxxxxxx&#34;</span> <span class="se">\
</span><span class="se"></span>     -H <span class="s2">&#34;Content-Type: application/json&#34;</span> <span class="se">\
</span><span class="se"></span>     --data <span class="s1">&#39;{&#34;type&#34;:&#34;A&#34;,&#34;name&#34;:&#34;home.nova.moe&#34;,&#34;content&#34;:&#34;&#39;</span><span class="nv">$home_ip</span><span class="s1">&#39;&#34;,&#34;ttl&#34;:120,&#34;proxied&#34;:false}&#39;</span>

</code></pre></div><h2 id="内网穿透">内网穿透</h2>
<p>使用frp，主要小钢炮自带。








<a href="https://www.ioiox.com/frp.html" >这家</a>，








<a href="https://www.iyuu.cn/archives/286/" >自建服务器</a>教程。frp更新</p>
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">wget https://github.com/fatedier/frp/releases/download/v0.34.1/frp_0.34.1_linux_arm64.tar.gz
tar -zxvf frp_0.34.1_linux_arm64.tar.gz
</code></pre></div><p><strong>光猫没事别恢复出厂设置，别恢复，别恢复</strong> 出厂后原来破解方法失效，拆机ttl有点麻烦，应该是配置升级原因。可找客服改桥接。10001按4快速报修，但AI简直智障，选宽带报修，检测正常重启，然后就自动挂掉了！！！








<a href="http://192.168.1.1/bridge_route.gch" >自助修改</a>。</p>

      ]]></content></entry><entry><title>hugo通过Github Action部署到Github Pages</title><id>https://ywycd.github.io/post/hugo-actions-gh-pages/</id><link href="https://ywycd.github.io/post/hugo-actions-gh-pages/" rel="alternate" type="text/html"/><updated>2020-12-19T14:20:32Z</updated><published>2020-12-19T13:16:07Z</published><description>通过Action部署到Github Pages。查了一些资料，有点不知道下一步。terminal修改后考虑部署到github，之前用even主</description><content type="html"><![CDATA[
        <p>通过Action部署到Github Pages。查了一些资料，有点不知道下一步。terminal修改后考虑部署到github，之前用even主题到netlify。<br>
本地win有hugo文档，部署到git仓库，查阅有建私人仓库、其他repositories。简单点username.github.io建两个branch。</p>
<h2 id="上传xxgithubio">上传xx.github.io</h2>
<p>添加远程，分支提示无法建立，切换分支、加ssh不行。加ssh key提示已使用，不是正确的密钥。看








<a href="https://github.com/peaceiris/actions-gh-pages" >gh-pages</a> 有提。</p>
<div class="highlight"><pre class="chroma"><code class="language-shell" data-lang="shell">ssh-keygen -t rsa -b <span class="m">4096</span> -C <span class="s2">&#34;</span><span class="k">$(</span>git config user.email<span class="k">)</span><span class="s2">&#34;</span> -f gh-pages -N <span class="s2">&#34;&#34;</span>
<span class="c1"># You will get 2 files:</span>
<span class="c1">#   gh-pages.pub (public key)</span>
<span class="c1">#   gh-pages     (private key)</span>
</code></pre></div><p>重建key，clip &lt; ~/.ssh/xxx.pub复制到Deploy Keys。  具体步骤如下，等待上传。</p>
<div class="highlight"><pre class="chroma"><code class="language-shell" data-lang="shell">git checkout -b main
git add .
git commit -m <span class="s2">&#34;first commit&#34;</span>
git push origin main
</code></pre></div><h2 id="部署action">部署action</h2>
<p>win无法新建.github文件夹，用git bash mkdir。建立<code>.github/workflows/gh-pages.yml</code>看文档做修改。新建名为ACTIONS_DEPLOY_KEY的Secrets，内容上面生成的私钥。git push后自动生成分支。</p>
<div class="highlight"><pre class="chroma"><code class="language-yml" data-lang="yml"><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">github pages</span><span class="w">
</span><span class="w">
</span><span class="w"></span><span class="nt">on</span><span class="p">:</span><span class="w">
</span><span class="w">  </span><span class="nt">push</span><span class="p">:</span><span class="w">
</span><span class="w">    </span><span class="nt">branches</span><span class="p">:</span><span class="w">
</span><span class="w">      </span>- <span class="l">main  </span><span class="w">
</span><span class="w">
</span><span class="w"></span><span class="nt">jobs</span><span class="p">:</span><span class="w">
</span><span class="w">  </span><span class="nt">deploy</span><span class="p">:</span><span class="w">
</span><span class="w">    </span><span class="nt">runs-on</span><span class="p">:</span><span class="w"> </span><span class="l">ubuntu-18.04</span><span class="w">
</span><span class="w">    </span><span class="nt">steps</span><span class="p">:</span><span class="w">
</span><span class="w">      </span>- <span class="nt">uses</span><span class="p">:</span><span class="w"> </span><span class="l">actions/checkout@v2</span><span class="w">
</span><span class="w">        </span><span class="nt">with</span><span class="p">:</span><span class="w">
</span><span class="w">          </span><span class="nt">submodules</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">  
</span><span class="w">          </span><span class="nt">fetch-depth</span><span class="p">:</span><span class="w"> </span><span class="m">0</span><span class="w">    
</span><span class="w">
</span><span class="w">      </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">Setup Hugo</span><span class="w">
</span><span class="w">        </span><span class="nt">uses</span><span class="p">:</span><span class="w"> </span><span class="l">peaceiris/actions-hugo@v2</span><span class="w">
</span><span class="w">        </span><span class="nt">with</span><span class="p">:</span><span class="w">
</span><span class="w">          </span><span class="nt">hugo-version</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;0.74.3&#39;</span><span class="w">
</span><span class="w">          </span><span class="nt">extended</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">
</span><span class="w">
</span><span class="w">      </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">Build</span><span class="w">
</span><span class="w">        </span><span class="nt">run</span><span class="p">:</span><span class="w"> </span><span class="l">hugo --minify</span><span class="w">
</span><span class="w">
</span><span class="w">      </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">Deploy</span><span class="w">
</span><span class="w">        </span><span class="nt">uses</span><span class="p">:</span><span class="w"> </span><span class="l">peaceiris/actions-gh-pages@v3</span><span class="w">
</span><span class="w">        </span><span class="nt">with</span><span class="p">:</span><span class="w">
</span><span class="w">          </span><span class="nt">deploy_key</span><span class="p">:</span><span class="w"> </span><span class="l">${{ secrets.ACTIONS_DEPLOY_KEY }}</span><span class="w">
</span><span class="w">          </span><span class="nt">publish_dir</span><span class="p">:</span><span class="w"> </span><span class="l">./public</span><span class="w">
</span><span class="w">          </span><span class="nt">commit_message</span><span class="p">:</span><span class="w"> </span><span class="l">${{ github.event.head_commit.message }}</span><span class="w">
</span></code></pre></div><h2 id="访问问题">访问问题</h2>
<p>推送后默认改为gh-pages。访问xx.github.io显示404，以为没加README.md。Settings里GitHub Pages Source下切换分支，可行。<br>
修改terminal，灯大说的那些用上一些。折腾主题时间大于写博客，还是记录点东西吧。</p>

      ]]></content></entry><entry><title>小钢炮ssh设置密钥登录（免密）</title><id>https://ywycd.github.io/post/ndm-ssh-key/</id><link href="https://ywycd.github.io/post/ndm-ssh-key/" rel="alternate" type="text/html"/><updated>2021-03-28T06:36:08Z</updated><published>2020-12-19T12:19:05Z</published><description>小钢炮设置 密钥认证，无需密码。 第一步 生成密钥对 #用dropbearkey生成密钥对 path=/etc/dropbear #生成私钥的地方，可随意填写 dropbearkey -t rsa -f ${path}/key_dropbear -s 2048 #保存公钥到~</description><content type="html"><![CDATA[
        <p>小钢炮设置








<a href="https://www.jianshu.com/p/0c8c00fb1f79" >密钥认证</a>，无需密码。<br>
<strong>第一步 生成密钥对</strong></p>
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash"><span class="c1">#用dropbearkey生成密钥对</span>
<span class="nv">path</span><span class="o">=</span>/etc/dropbear <span class="c1">#生成私钥的地方，可随意填写</span>
dropbearkey -t rsa -f <span class="si">${</span><span class="nv">path</span><span class="si">}</span>/key_dropbear -s <span class="m">2048</span>
<span class="c1">#保存公钥到~/.ssh/authorized_keys</span>
dropbearkey -t rsa -f <span class="nv">$path</span>/key_dropbear -s <span class="m">2048</span> -y <span class="p">|</span> sed -n 2p &gt; ~/.ssh/authorized_keys
<span class="c1">#转换私钥成可以读取的文件</span>
dropbearconvert dropbear openssh <span class="si">${</span><span class="nv">path</span><span class="si">}</span>/key_dropbear <span class="si">${</span><span class="nv">path</span><span class="si">}</span>/key_openssh
<span class="c1">#打印私钥</span>
cat <span class="si">${</span><span class="nv">path</span><span class="si">}</span>/key_openssh <span class="c1">#把私钥复制到记事本备用</span>
</code></pre></div><p>也可 ip地址/admin/system/admin 网页添加。运行上面后发现保存公钥提示无法打开目录，修改下。原来是在恩山看到作者，后面无意发现简书地址。<br>
<strong>第二步 禁用密码登录</strong><br>
修改<code>/etc/init.d/S50dropbear</code>文件，第 10 行添加“-s”参数。如<code>DROPBEAR_ARGS=&quot;$DROPBEAR_ARGS -R -s&quot;</code>。其他-p 要开启的ssh端口。注意备份,保存并重启。<code>./etc/init.d/S50dropbear restart</code>或startup处重启。</p>

      ]]></content></entry><entry><title>下载私人仓库和SSH认证</title><id>https://ywycd.github.io/post/github-ssh-key-and-private-repositories/</id><link href="https://ywycd.github.io/post/github-ssh-key-and-private-repositories/" rel="alternate" type="text/html"/><updated>2020-12-19T14:20:32Z</updated><published>2020-12-04T08:41:58Z</published><description>下载私人仓库 博客内容在私人仓库，现在想下载到电脑上备着，后面继续记录。 查阅发现git clone https://myusername@github.c</description><content type="html"><![CDATA[
        <h2 id="下载私人仓库">下载私人仓库</h2>
<p>博客内容在私人仓库，现在想下载到电脑上备着，后面继续记录。</p>
<p>查阅发现<code>git clone https://myusername@github.com/ownersusername/repo_name.git</code>有用，其他出错/要权限（win git bash创建不了文件换cmd下载）。下载到电脑、小钢炮。小钢炮输密码（clone、push）不方便，研究如何ssh验证。无法使用ssh-keygen，电脑复制过去不行。</p>
<h2 id="ssh认证">SSH认证</h2>
<p>生成密钥<code>ssh-keygen -t ed25519 -C &quot;your_email@example.com&quot;</code>，普通人一路回车。复制密钥（记得修改）<code>clip &lt; ~/.ssh/id_ed25519.pub</code> 。








<a href="https://docs.github.com/en/free-pro-team@latest/github/authenticating-to-github/connecting-to-github-with-ssh" >详见</a>  点击头像-Settings-SSH and GPG keys新增，取名随意，区分开来。测试连接<code>ssh -T git@github.com</code>。</p>
<pre><code>Hi username! You've successfully authenticated, but GitHub does not provide shell access.
</code></pre><p>提示这个，恭喜配置成功。</p>
<p><strong>小钢炮只能另辟蹊径</strong> ssh-keygen不存在。开始用








<a href="https://bbs.hassbian.com/thread-8491-1-1.html" >ssh-copy-id root@n1地址</a>失败。复制电脑key过去无用。ssh -T提示<code>Connection to git@github.com:22 exited: No auth methods could be used.</code>感谢那个








<a href="https://forum.archive.openwrt.org/viewtopic.php?id=47551" >久远的帖子</a>。</p>
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash"><span class="c1"># Generate your identity key on openwrt</span>
dropbearkey -t rsa -f ~/.ssh/id_rsa
<span class="c1"># Convert public key from dropbear binary to openssh text</span>
<span class="c1"># Copy and paste output from below to bitbucket account ssh keys</span>
dropbearkey -y -f ~/.ssh/id_rsa <span class="p">|</span> head -n <span class="m">2</span> <span class="p">|</span> tail -1
<span class="c1"># Change git ssh command</span>
<span class="nb">echo</span> <span class="s2">&#34;#!/bin/sh&#34;</span> &gt; ~/.gitssh.sh
<span class="nb">echo</span> <span class="s2">&#34;dbclient -y -i ~/.ssh/id_rsa \$*&#34;</span> &gt;&gt; ~/.gitssh.sh
chmod +x ~/.gitssh.sh
<span class="nb">echo</span> <span class="s2">&#34;export GIT_SSH=\$HOME/.gitssh.sh&#34;</span> &gt;&gt; /etc/profile
<span class="c1"># Now login again to openwrt</span>
<span class="c1"># Now use git (finally)</span>
git clone git@github.com:&lt;user&gt;/&lt;repo&gt;.git
</code></pre></div><p>运行时提示dbclient: Exited: Error resolving &lsquo;$*&rsquo; port &lsquo;22&rsquo;. Name or service not known。看最后回复修改后成功。<br>
内置的是dropbear，通过转换才行。<code>ssh -i .ssh/id_rsa git@github.com</code>测试连接。<br>
<code>git clone git@github.com:username/repo_name.git</code>无需密码，上面地址要输。</p>
<h2 id="git-config设置">git config设置</h2>
<p>git config &ndash;global user.name &ldquo;John Doe&rdquo;</p>
<p>git config &ndash;global user.email &ldquo;<a href="mailto:johndoe@example.com">johndoe@example.com</a>&rdquo;</p>
<p>设置








<a href="https://www.v2ex.com/t/641227" >代理</a>  git config &ndash;global http.proxy &lsquo;socks5h://localhost:port&rsquo;<br>
查看配置<code>git config -l</code></p>

      ]]></content></entry><entry><title>Bitwarden服务器搭建记录</title><id>https://ywycd.github.io/post/build-my-bitwarden/</id><link href="https://ywycd.github.io/post/build-my-bitwarden/" rel="alternate" type="text/html"/><updated>2020-12-19T11:13:26Z</updated><published>2020-12-02T05:50:42Z</published><description>N多人推荐bitwarden，群友介绍下也起了自建的念头。过程也踩了好多坑，终于部署成功。选择了 bitwarden_rs第三方版，轻量而且高</description><content type="html"><![CDATA[
        <p>N多人推荐bitwarden，群友介绍下也起了自建的念头。过程也踩了好多坑，终于部署成功。选择了








<a href="https://github.com/dani-garcia/bitwarden_rs" >bitwarden_rs</a>第三方版，轻量而且高级功能免费。安装教程也多。</p>
<h2 id="准备">准备</h2>
<p>机器上安装好docker，域名，https代理工具（nginx等）</p>
<h2 id="安装">安装</h2>
<p><code>docker pull bitwardenrs/server:latest</code></p>
<p>相关配置</p>
<div class="highlight"><pre class="chroma"><code class="language-docker" data-lang="docker">docker run -d --name bitwarden <span class="se">\
</span><span class="se"></span>  -e <span class="nv">SIGNUPS_ALLOWED</span><span class="o">=</span><span class="nb">true</span> <span class="se">\
</span><span class="se"></span>  -e <span class="nv">WEBSOCKET_ENABLED</span><span class="o">=</span><span class="nb">true</span> <span class="se">\
</span><span class="se"></span>  -e <span class="nv">LOG_FILE</span><span class="o">=</span>/data/bitwarden.log <span class="se">\
</span><span class="se"></span>  -e <span class="nv">DOMAIN</span><span class="o">=</span>https://bitwarden.example.tld/vault/ <span class="se">\
</span><span class="se"></span>  -p 8880:80 <span class="se">\
</span><span class="se"></span>  -p 3012:3012 <span class="se">\
</span><span class="se"></span>  -v /bw-data/:/data/ <span class="se">\
</span><span class="se"></span>  bitwardenrs/server:latest<span class="err">
</span></code></pre></div><p>也可用Docker Compose运行。<del>主机上用Compose遇到localhost:port timeout。经常提示容器名已存在（未运行成功），<code>docker ps</code>又找不到相关。无奈放弃。</del></p>
<h2 id="设置nginx">设置Nginx</h2>
<p>主机有nginx，抄教程运行成功。但这样自带流量统计页404。<del>开始还以为是另外配置的云监控弄的，注释掉无用。发现是<code>location / {</code>问题。</del> wiki有








<a href="https://github.com/dani-garcia/bitwarden_rs/wiki/Proxy-examples" >sub-path</a>例子。</p>
<div class="highlight"><pre class="chroma"><code class="language-nginx" data-lang="nginx"><span class="c1"># Define the server IP and ports here.
</span><span class="c1"></span><span class="k">upstream</span> <span class="s">bitwardenrs-default</span> <span class="p">{</span> <span class="kn">server</span> <span class="n">127.0.0.1</span><span class="p">:</span><span class="mi">8880</span><span class="p">;</span> <span class="p">}</span>
<span class="k">upstream</span> <span class="s">bitwardenrs-ws</span> <span class="p">{</span> <span class="kn">server</span> <span class="n">127.0.0.1</span><span class="p">:</span><span class="mi">3012</span><span class="p">;</span> <span class="p">}</span>

<span class="c1"># Redirect HTTP to HTTPS
</span><span class="c1"></span><span class="k">server</span> <span class="p">{</span>
    <span class="kn">listen</span> <span class="mi">80</span><span class="p">;</span>
    <span class="kn">listen</span> <span class="s">[::]:80</span><span class="p">;</span>
    <span class="kn">server_name</span> <span class="s">bitwardenrs.example.tld</span><span class="p">;</span>
    <span class="kn">return</span> <span class="mi">301</span> <span class="s">https://</span><span class="nv">$host$request_uri</span><span class="p">;</span>
<span class="p">}</span>

<span class="k">server</span> <span class="p">{</span>
    <span class="kn">listen</span> <span class="mi">443</span> <span class="s">ssl</span> <span class="s">http2</span><span class="p">;</span>
    <span class="kn">listen</span> <span class="s">[::]:443</span> <span class="s">ssl</span> <span class="s">http2</span><span class="p">;</span>
    <span class="kn">server_name</span> <span class="s">bitwardenrs.example.tld</span><span class="p">;</span>

    <span class="c1"># Specify SSL Config when needed
</span><span class="c1"></span>    <span class="c1">#ssl_certificate /path/to/certificate/letsencrypt/live/bitwardenrs.example.tld/fullchain.pem;
</span><span class="c1"></span>    <span class="c1">#ssl_certificate_key /path/to/certificate/letsencrypt/live/bitwardenrs.example.tld/privkey.pem;
</span><span class="c1"></span>    <span class="c1">#ssl_trusted_certificate /path/to/certificate/letsencrypt/live/bitwardenrs.example.tld/fullchain.pem;
</span><span class="c1"></span>
    <span class="kn">client_max_body_size</span> <span class="s">128M</span><span class="p">;</span>

    <span class="c1">## Using a Sub Path Config
</span><span class="c1"></span>    <span class="c1"># Path to the root of your installation
</span><span class="c1"></span>    <span class="kn">location</span> <span class="s">/vault/</span> <span class="p">{</span>
      <span class="kn">proxy_set_header</span> <span class="s">Host</span> <span class="nv">$host</span><span class="p">;</span>
      <span class="kn">proxy_set_header</span> <span class="s">X-Real-IP</span> <span class="nv">$remote_addr</span><span class="p">;</span>
      <span class="kn">proxy_set_header</span> <span class="s">X-Forwarded-For</span> <span class="nv">$proxy_add_x_forwarded_for</span><span class="p">;</span>
      <span class="kn">proxy_set_header</span> <span class="s">X-Forwarded-Proto</span> <span class="nv">$scheme</span><span class="p">;</span>

      <span class="kn">proxy_pass</span> <span class="s">http://bitwardenrs-default</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="kn">location</span> <span class="s">/vault/notifications/hub/negotiate</span> <span class="p">{</span>
      <span class="kn">proxy_set_header</span> <span class="s">Host</span> <span class="nv">$host</span><span class="p">;</span>
      <span class="kn">proxy_set_header</span> <span class="s">X-Real-IP</span> <span class="nv">$remote_addr</span><span class="p">;</span>
      <span class="kn">proxy_set_header</span> <span class="s">X-Forwarded-For</span> <span class="nv">$proxy_add_x_forwarded_for</span><span class="p">;</span>
      <span class="kn">proxy_set_header</span> <span class="s">X-Forwarded-Proto</span> <span class="nv">$scheme</span><span class="p">;</span>

      <span class="kn">proxy_pass</span> <span class="s">http://bitwardenrs-default</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="kn">location</span> <span class="s">/vault/notifications/hub</span> <span class="p">{</span>
      <span class="kn">proxy_set_header</span> <span class="s">Upgrade</span> <span class="nv">$http_upgrade</span><span class="p">;</span>
      <span class="kn">proxy_set_header</span> <span class="s">Connection</span> <span class="nv">$http_connection</span><span class="p">;</span>
      <span class="kn">proxy_set_header</span> <span class="s">X-Real-IP</span> <span class="nv">$remote_addr</span><span class="p">;</span>

      <span class="kn">proxy_pass</span> <span class="s">http://bitwardenrs-ws</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="c1"># Optionally add extra authentication besides the ADMIN_TOKEN
</span><span class="c1"></span>    <span class="c1"># If you don&#39;t want this, leave this part out
</span><span class="c1"></span>    <span class="kn">location</span> <span class="s">^~</span> <span class="s">/vault/admin</span> <span class="p">{</span>
      <span class="c1"># See: https://docs.nginx.com/nginx/admin-guide/security-controls/configuring-http-basic-authentication/
</span><span class="c1"></span>      <span class="kn">auth_basic</span> <span class="s">&#34;Private&#34;</span><span class="p">;</span>
      <span class="kn">auth_basic_user_file</span> <span class="s">/path/to/htpasswd_file</span><span class="p">;</span>

      <span class="kn">proxy_set_header</span> <span class="s">Host</span> <span class="nv">$host</span><span class="p">;</span>
      <span class="kn">proxy_set_header</span> <span class="s">X-Real-IP</span> <span class="nv">$remote_addr</span><span class="p">;</span>
      <span class="kn">proxy_set_header</span> <span class="s">X-Forwarded-For</span> <span class="nv">$proxy_add_x_forwarded_for</span><span class="p">;</span>
      <span class="kn">proxy_set_header</span> <span class="s">X-Forwarded-Proto</span> <span class="nv">$scheme</span><span class="p">;</span>

      <span class="kn">proxy_pass</span> <span class="s">http://bitwardenrs-default</span><span class="p">;</span>
    <span class="p">}</span>

<span class="p">}</span>
</code></pre></div><p>在nginx文件做相应修改。家里nas也试过跑docker，但最后找不到网页。<em>没配置https环境，装了nginx，提示配置文件出错。设置frp穿透域名，无法访问。ip+端口失败。</em></p>
<h2 id="网页客户端">网页、客户端</h2>
<p>输入对应网址可打开网页。开始显示<code>502 bad gateway</code>，搜索查了下是加上限制。<strong>最重要还是上面端口没改成对应。</strong> 创建账户，导入keepass数据（导出相应格式，网页端导入），要等会。<br>
体验了安卓版，先连接到自建服务器。可自动填充，创建账户密码会提示是否保存到bitwarden。但TOTP空白，还以为跟kp一样。<del>chrome内核浏览器/原来有包名无法填充</del>第二天看文档，加别人指点，发现空白是填key，后面复制。包名是格式不一样，等有时间统一修改。浏览器可安装扩展。</p>
<h2 id="备份恢复">备份恢复</h2>
<p>主要是sqlite3数据库文件，其他bw-data目录有附件文件夹、图标缓存文件夹、密钥等。</p>
<p><em>设置nginx过程顺便解决了








<a href="http://freetribe.me/691.html" >云监控</a>问题。开始是docker跑，映射html，中途无法访问。</em>   惯例搜索，记录解决方法。</p>
<div class="highlight"><pre class="chroma"><code class="language-nginx" data-lang="nginx"><span class="k">location</span> <span class="s">/ss</span> <span class="p">{</span>
    <span class="kn">index</span> <span class="s">index.html</span><span class="p">;</span>
    <span class="kn">alias</span> <span class="s">/usr/local/ServerStatus/web/</span><span class="p">;</span>
    <span class="kn">autoindex</span> <span class="no">on</span><span class="p">;</span>
   <span class="p">}</span>
</code></pre></div><h2 id="进阶">进阶</h2>
<p>设置-域名规则，可设置通用网站（域名不同账密相同）。实际加了两个通用（如淘宝支付宝、微博新浪），测试只有淘宝新浪有填充，显示2个。另外添加也不行。在淘宝新建URI，选默认匹配检测，下面几项具体看








<a href="https://bitwarden.com/help/article/uri-match-detection/" >文档</a>。只剩微博一项就可以匹配成功。后续都在项目里新添URI。<br>
看了下








<a href="https://bitwarden.com/help/article/custom-fields/" >自定义字段</a>说明，不是想象中简单的备注。看了下YT视频，回来发现说明里是动图。简单说获取网页输入框的ID，填写自定义字段（名称ID，值内容），保存后会自动填充。后续网站如果需要多步验证可以设置。<br>
关闭用户注册、网页端</p>
<pre><code>SIGNUPS_ALLOWED=false
WEB_VAULT_ENABLED=false
</code></pre>
      ]]></content></entry><entry><title>记录docker运行容器</title><id>https://ywycd.github.io/post/docker-running-containers/</id><link href="https://ywycd.github.io/post/docker-running-containers/" rel="alternate" type="text/html"/><updated>2020-12-18T06:46:45Z</updated><published>2020-11-15T22:21:11Z</published><description>docker各平台都有，转移方便。使用时注意选对应平台。不用时可删除。 portainer（网页管理）、nginx 80x86/typecho 安装使用方便，自带主题、插</description><content type="html"><![CDATA[
        <p>docker各平台都有，转移方便。使用时注意选对应平台。不用时可删除。</p>
<ul>
<li>portainer（网页管理）、nginx</li>
<li>80x86/typecho
安装使用方便，自带主题、插件够用。</li>
<li>adguardhome
广告屏蔽。目前是安在旁路由上，主路由DNS指向旁路由。</li>
<li>openwrt
旁路由有些功能受限。跑op是为了科学，装插件等。Github上有工具自动编译，本地和网上都尝试过。</li>
<li>clash
当时嫌弃openclash不稳定，修改配置就失效。东拼西凑写好配置，运行成功。目前主要浏览器插件使用。新版配置文件要改，没升级。<code>subconverter</code>订阅转换。</li>
<li>PT
灯大修改版qb、filebrowser,IYUU,flexget etc</li>
<li>enshan









<a href="https://www.right.com.cn/forum/thread-911375-1-1.html" >大佬</a>移植到N1的镜像。sshd ssh跳板。freenom 域名续期。chfs 网盘支持webdav。添加用户<code>docker exec chfs addusr 用户名 密码 权限</code></li>
<li>noip









<a href="https://github.com/simao-silva/noip-renewer" >自动续期</a>之前有另一个大佬的方案，但搬不到arm64，试过alpine，放弃。开始家里机器显示finished，但没续期。后来上vps提示host xx confirmed。加了定时任务、docker代理，看后续是否续期。</li>
</ul>
<p>TBC&hellip;.</p>

      ]]></content></entry><entry><title>茅塞顿开</title><id>https://ywycd.github.io/post/mao-se-dun-kai/</id><link href="https://ywycd.github.io/post/mao-se-dun-kai/" rel="alternate" type="text/html"/><updated>2020-12-18T06:46:45Z</updated><published>2020-11-15T14:13:09Z</published><description>破解光猫 按步就班 n1 smb 一直无法识别。照这篇n1开master，成功。原来padavan也有smb服务。 小钢炮其他设置 aria2一直出错，看后发</description><content type="html"><![CDATA[
        <p>








<a href="https://www.hellozjx.com/2019/08/13/f612/" >破解光猫</a> 按步就班</p>
<p>








<a href="https://nanodm.net/post/nanodm/samba-sharing-auto-discovery-configuration-under-padavan-router/" >n1 smb</a> 一直无法识别。照这篇n1开master，成功。原来padavan也有smb服务。</p>
<p>








<a href="https://post.smzdm.com/p/a78e0x0o/" >小钢炮其他设置</a> aria2一直出错，看后发现要新建目录。和tr一样必须Dashboard改。如果有注意log也会发现。</p>
<p>








<a href="https://www.v2fly.org/chapter_02/03_routing.html" >添加cccat黑名单</a> 网上看到格式，复制进去没用。照其他示例删减不行。看介绍移到routing前面改了下格式，选domain成功。</p>
<p>








<a href="https://www.right.com.cn/forum/thread-529613-1-1.html" >小钢炮挂载</a> 停电后大硬盘无法挂载。搜索了下，去掉openwrt挂载未分配硬盘。按这贴加了sdb分区，在启动加了mount /dev/sdb /mnt/sdb。后续再通电可以直接挂载了。</p>

      ]]></content></entry><entry><title>Nian Tips</title><id>https://ywycd.github.io/post/nian-tips/</id><link href="https://ywycd.github.io/post/nian-tips/" rel="alternate" type="text/html"/><updated>2021-02-28T11:44:59Z</updated><published>2020-11-11T01:43:59Z</published><description>那两篇用户心得已经具体介绍念如何使用这里就不多做重复，主要讲收集到的小技巧或者彩蛋。分部分来讲下。由于新版功能增减，介绍的可能被删除/修改，</description><content type="html"><![CDATA[
        <p><del>那两篇用户心得已经具体介绍念如何使用</del>这里就不多做重复，主要讲收集到的小技巧或者彩蛋。分部分来讲下。由于新版功能增减，介绍的可能被删除/修改，更新不及时。请关注内置的           








<a href="https://docs.qq.com/doc/DZkVOelRPbkhUZHJB" >更新说明&amp;功能介绍</a></p>
<h2 id="首页">首页</h2>
<p>





    
        
    


<a class="post-img-lb" href="https://ywycd.github.io/post/nian-tips/nian-home.jpg" data-caption="nian-home">
    <img src="https://ywycd.github.io/post/nian-tips/nian-home.jpg" alt="nian-home"  />
</a>
长按添加记本，可自定义内容，改成你想显示的。</p>
<p>双击标准记本可直接新建进展，双击打卡记本直接打卡。打卡、计时支持NFC。</p>
<p>长按记本可拖动排序。<code>2.6.0</code>及其之后要到第一屏<code>记本排序</code>里修改。</p>
<p><del>首页摇一摇随机进展，可添加回应，也会出现添加补录次数。</del> <code>2.7.5</code>改为点击触发，首页双击头像，特定标准记本双击创建按钮。 往左滑，显示最近的进展。<code>2.5.1</code>「最近进展」页新增计时、账本、打卡进展。 <code>2.7.5</code> 可自定义进展项。第三屏设置，设置各类记本进展是否显示。类似<code>2.7.1</code>更新时段右上角可选择单个记本.</p>
<p><del>点击头像，进展滑过x</del> <code>2.7.5</code>已去除</p>
<h2 id="记本">记本</h2>
<p>





    
        
    


<a class="post-img-lb" href="https://ywycd.github.io/post/nian-tips/nian-jiben.jpg" data-caption="nian-jiben">
    <img src="https://ywycd.github.io/post/nian-tips/nian-jiben.jpg" alt="nian-jiben"  />
</a>
长按进展可直接编辑。如有链接要按底部时间那行。</p>
<p>长按更多按钮（三个点），可快速复制。</p>
<h2 id="进展编辑">进展编辑</h2>
<p>





    
        
    


<a class="post-img-lb" href="https://ywycd.github.io/post/nian-tips/nian-newjinzhan.jpg" data-caption="nian-newjinzhan">
    <img src="https://ywycd.github.io/post/nian-tips/nian-newjinzhan.jpg" alt="nian-newjinzhan"  />
</a>
右上角有小工具，可左滑添加相应项。<code>2.5.1</code>实验室-进展编辑页-自定义工具栏，可长按拖动排序。</p>
<p>点击字数，隐藏工具栏。如果不统一，实验室里关闭进展编辑页临时修复。</p>
<h2 id="其他">其他</h2>
<p>设置-关于，点击宠物，会出现时间进度条（自己发现）。</p>
<p>设置倒计时xx天，进展以2020-05-21 格式为开头。新版有纪念日/倒数日，但无法添加到桌面。</p>
<p>自带小工具，满减计算、日期间隔、休闲娱乐。新增临时文本。双击文本可以改变左右位置，长按可选择复制或删除，可记录琐碎的文本，自问自答也可。</p>
<p>常驻通知，可选特定记本。摘抄或补录时可用。补录可用<code>补录进展</code>（<code>2.2.0</code>放宽至每月30次），或者手动修改时间再写。</p>
<h2 id="同步">同步</h2>
<p>自动轻备份，在backups目录，只有文本数据。如果不小心清理空间时误删，可手动把 xx.bak 改为 nian.db 放到 nian 文件夹中即可。</p>
<p>文件夹说明，nian存放图片（默认为剪切，可到实验室关闭）、文本。 <del>nian_audio音频， nian_video视频，插入视频时，最好放到nian_video下，再选择插入。清理空间记得加入白名单。</del> 新版已换成系统文件管理，做好备份。</p>
<p>个人是隔段时间备份，用syncthing同步到家里电脑，上传网盘。<code>2.5.1</code>及其之后无自带备份，需手动压缩备份。</p>
<p>或者用FolderSync（莴笋_君推荐）同步文件。其他同步工具也可。具体教程可看这里 <a href="https://www.coolapk.com/feed/21594226">https://www.coolapk.com/feed/21594226</a></p>
<h2 id="更新">更新</h2>
<p>记账 长按确认可以不退出页面记下一笔；长按顶部标题可在支出和收入之间切换。</p>
<p>计时:






    
        
    


<a class="post-img-lb" href="https://ywycd.github.io/post/nian-tips/jishi01.png" data-caption="jishi01">
    <img src="https://ywycd.github.io/post/nian-tips/jishi01.png" alt="jishi01"  />
</a>
走动的时间数字是可以点击展开全屏的。






    
        
    


<a class="post-img-lb" href="https://ywycd.github.io/post/nian-tips/jishi02.png" data-caption="jishi02">
    <img src="https://ywycd.github.io/post/nian-tips/jishi02.png" alt="jishi02"  />
</a>
中间的色环点击进入纯黑模式。</p>
<p>记本归类:  第一屏-记本标签，打上同一个标签，首页就会归到同一文件夹下。






    
        
    


<a class="post-img-lb" href="https://ywycd.github.io/post/nian-tips/sort.png" data-caption="sort">
    <img src="https://ywycd.github.io/post/nian-tips/sort.png" alt="sort"  />
</a>
<del>保存喜欢的歌曲by你瞅瞅你。录制音频保存。移动歌曲到nian_audio文件夹。重命名，如“audio_2020_11_13_09_09”，同时删掉原来的音频。歌词复制到进展即可。</del> 新版已去除录音功能，添加本地音乐，参考Retro Music Player。</p>
<p><em>不知不觉也写了这么久</em>。有的功能，比如制卡，用得不多，加上那两篇有说到，就略过。当然也有没发现的，欢迎各位使用nian。如“你瞅瞅你”说的倘使有一个念的展览大会，你会发现每一个都是不一样的。</p>
<p><code>下载地址</code>  








<a href="https://app.mi.com/details?id=sa.nian.so&amp;ref=search" >小米商店</a>  








<a href="https://www.coolapk.com/apk/sa.nian.so" >酷安</a></p>
<p>这里附上nian历史图标。






    
        
    


<a class="post-img-lb" href="https://ywycd.github.io/post/nian-tips/List_icon1.png" data-caption="List_icon1">
    <img src="https://ywycd.github.io/post/nian-tips/List_icon1.png" alt="List_icon1"  />
</a>






    
        
    


<a class="post-img-lb" href="https://ywycd.github.io/post/nian-tips/List_icon2.png" data-caption="List_icon2">
    <img src="https://ywycd.github.io/post/nian-tips/List_icon2.png" alt="List_icon2"  />
</a></p>

      ]]></content></entry><entry><title>Terminal Fail</title><id>https://ywycd.github.io/post/terminal-fail/</id><link href="https://ywycd.github.io/post/terminal-fail/" rel="alternate" type="text/html"/><updated>2020-12-19T11:13:26Z</updated><published>2020-11-05T04:08:19Z</published><description>折腾terminal主题失败，netlify显示不全。但灯大也是netlify部署的。 学习了alias和screen命令。 alias配置文件</description><content type="html"><![CDATA[
        <p>折腾terminal主题失败，netlify显示不全。但灯大也是netlify部署的。</p>
<p>学习了alias和screen命令。</p>
<p>alias配置文件在~/.bashrc。<code>source .bashrc</code>配置生效</p>
<p><code>screen -R name</code> Ctrl+A+D后台运行。输入<code>screen -R name</code>可再进入。</p>
<p>更新并推送博客</p>
<pre><code>cd blog
git add .
git commit -m &quot;update post&quot;
git push origin master
</code></pre><p><code>screen -ls</code>列出所有screen任务。<code>screen -X -S [session # number] quit</code>结束特定任务。</p>
<p><code>screen -wipe</code>清除任务（dead）。</p>
<p>








<a href="https://blog.olowolo.com/post/hugo-quick-start/" >Hugo 从入门到会用</a> 提到添加<code>hasCJKLanguage = true</code>，试了下终于有摘要！！继续折腾灯大修改版Terminal。<strong>根目录下模板优先级总是高于 /themes/同名模板</strong> 所以复制到博客目录进行修改。</p>
<p>修改archive格式，list.html里<code>.archive__post h3.archive__post-title </code>加<code>margin-right: 100px</code>。增加tagcloud，照content/archive.md内容新建tagcloud.md，菜单老是显示showmore。layouts/partials/menu.html修改，mobile留一个就行。</p>
<p>然后部署到xx.github.io。中间没仔细看教程走弯路，部署完英文有点不一样，加入<code>extended: true</code>。toc用二级目录，代码高亮```后加入相应代码，可复制。github上有提到。</p>

      ]]></content></entry><entry><title>My First Post</title><id>https://ywycd.github.io/post/my-first-post/</id><link href="https://ywycd.github.io/post/my-first-post/" rel="alternate" type="text/html"/><updated>2020-12-18T06:46:45Z</updated><published>2020-10-31T07:55:06Z</published><description>跟随灯大脚步，博客从typecho换成hugo。也没几篇记录 起因 看到灯大说typecho参考链接，编辑要翻到最下面。再加上要加端口访问。 好像</description><content type="html"><![CDATA[
        <p><em>跟随灯大脚步，博客从typecho换成hugo。也没几篇记录</em></p>
<ul>
<li>起因</li>
</ul>
<p>看到灯大说typecho参考链接，编辑要翻到最下面。再加上要加端口访问。 好像设置nginx反代，就不用加端口。还是懒。 之前就看到那篇，今天有空就开干。 还是借用在线md编辑器。全局下载速度也慢，慢慢等啊</p>
<ul>
<li>步骤</li>
</ul>
<p>灯大和Hugo 从入门到会用和网上搜索参考 ##安装 下载二进制文件，在win10部署。解压后添加环境变量，注销账号cmd才运行hugo。 要用git命令，另外安了git</p>
<h2 id="建站">建站</h2>
<p>hugo new site blog</p>
<h2 id="添加主题">添加主题</h2>
<pre><code>cd xxx/blog;
git init;
git submodule add -b ttys3 https://github.com/ttys3/hugo-theme-terminal.git themes/terminal
echo 'theme = &quot;terminal&quot;' &gt;&gt; config.toml
</code></pre>
<h2 id="开始写作">开始写作</h2>
<p>hugo new post/my-first-post.md 开启Hugo内置的服务器 hugo server -D http://localhost:1313/ 可访问网站。</p>
<p>提示 &lt;$.Site.Params.FullWidthTheme&gt;: invalid value; expected bool 搜索在issues里找到答案。config.toml里加 [params] fullWidthTheme = false centerTheme = true</p>
<h2 id="首页没显示">首页没显示</h2>
<p>复制config.toml没用。看别人问题加时间也不行。有提到复制exampleSite里的。 试了下可以显示。格式错误。复制标题可以，修改就不行。但新建md错误。我误删什么了吧。</p>
<h2 id="中文乱码">中文乱码</h2>
<p>md编码改为utf-8。</p>
<h2 id="其他">其他</h2>
<p>默认tags = [&quot;&quot;, &ldquo;&quot;]
config.toml 加了<code>[taxonomies]</code>，要用tags: (换行)-
centerTheme = true 主题居中显示。
后面发现灯大修改是在tty3分支。进terminal用<code>git checkout ttys3</code>切换，git pull发现已经最新。首页终于出现图片。
emmm最后还是换成了even主题。灯大主题部署到netlify显示不完全，文章没有内容摘要（不知道第一篇怎么就显示），一样内容even就有摘要。</p>

      ]]></content></entry><entry><title>Hetzner折腾</title><id>https://ywycd.github.io/post/buy-hetzner/</id><link href="https://ywycd.github.io/post/buy-hetzner/" rel="alternate" type="text/html"/><updated>2021-01-09T13:00:12Z</updated><published>2020-09-21T05:22:39Z</published><description>注册，依靠翻译、fq完成。购买需要身份验证，等他们上班。11点发验证身份，lj英语编了下。2点还没回复，睡了一觉。 5点醒来，看邮箱，发现被拒</description><content type="html"><![CDATA[
        <p>注册，依靠翻译、fq完成。购买需要身份验证，等他们上班。11点发验证身份，lj英语编了下。2点还没回复，睡了一觉。</p>
<p>5点醒来，看邮箱，发现被拒，账号被删。不信邪，换邮箱重新注册，找了下验证模板。被现实打击，回复很快，但还是被删。找金毛大佬代购，170/月。后面还越涨越高。</p>
<p>1.Hetzner 独服一键安装系统（软 RAID0）</p>
<p>注意：这个方法只适用于软 RAID（不支持硬 RAID）、多硬盘且所有硬盘大小相同的 Hetzner 独立服务器。
SSH 连接服务，输入</p>
<div class="highlight"><pre class="chroma"><code class="language-shell" data-lang="shell"><span class="nb">echo</span> x <span class="p">|</span> installimage -p /boot:ext3:1G,/:ext4:all -l <span class="m">0</span> -r yes -i images/Ubuntu-1804-bionic-64-minimal.tar.gz -a -n Hz <span class="o">&amp;&amp;</span> reboot
</code></pre></div><p>








<a href="https://npchk.info/hetzner-raid0/" >硬RAID0</a> 安装 Ubuntu 18.04。</p>
<p>2.盒子软件安装</p>
<p>一般的刷子完全可以仅依赖








<a href="https://github.com/Aniverse/inexistence" >星大脚本</a> ,此时还可以大喊 








<a href="https://github.com/amefs/quickbox-lite" >efs</a> 牛逼！</p>
<p>手动安装 <code>bash &lt;(wget --no-check-certificate -qO- https://github.com/Aniverse/inexistence/raw/master/inexistence.sh)</code></p>
<p>用户名asdw,qB、De、rT、FlexGet等。 








<a href="https://github.com/jerrymakesjelly/autoremove-torrents" >自动删种</a> 和 








<a href="https://github.com/Aniverse/WiKi/blob/master/Flexget.md" >Flexget示例</a></p>

      ]]></content></entry><entry><title>Docker Clash记录</title><id>https://ywycd.github.io/post/docker-clash/</id><link href="https://ywycd.github.io/post/docker-clash/" rel="alternate" type="text/html"/><updated>2021-01-09T13:00:12Z</updated><published>2020-05-17T05:10:41Z</published><description>起因： clash N多分支，体验了luci openclash不稳定，改动后经常失效，换成docker clash。 配置文件准备 docker-compose.yml 启动clash …</description><content type="html"><![CDATA[
        <p>起因：








<a href="https://github.com/Dreamacro/clash" >clash</a> N多分支，体验了luci openclash不稳定，改动后经常失效，换成docker clash。</p>
<h2 id="配置文件准备">配置文件准备</h2>
<h3 id="docker-composeyml">docker-compose.yml</h3>
<p>启动clash</p>
<div class="highlight"><pre class="chroma"><code class="language-yml" data-lang="yml"><span class="w">    </span><span class="nt">version</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;3.4&#39;</span><span class="w">
</span><span class="w">    </span><span class="nt">services</span><span class="p">:</span><span class="w">
</span><span class="w">      </span><span class="nt">clash</span><span class="p">:</span><span class="w">
</span><span class="w">        </span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">dreamacro/clash:latest-arm64v8</span><span class="w">
</span><span class="w">        </span><span class="nt">volumes</span><span class="p">:</span><span class="w">
</span><span class="w">          </span>- <span class="l">./config.yaml:/root/.config/clash/config.yaml</span><span class="w">
</span><span class="w">          </span>- <span class="l">./dashboard:/ui</span><span class="w">
</span><span class="w">        </span><span class="nt">ports</span><span class="p">:</span><span class="w">
</span><span class="w">          </span>- <span class="s2">&#34;7890:7890&#34;</span><span class="w">
</span><span class="w">          </span>- <span class="s2">&#34;7891:7891&#34;</span><span class="w">
</span><span class="w">          </span>- <span class="s2">&#34;7892:7892&#34;</span><span class="w">
</span><span class="w">          </span>- <span class="s2">&#34;9090:9090&#34;</span><span class="w">
</span><span class="w">          </span>- <span class="s2">&#34;1053:1053&#34;</span><span class="w">
</span><span class="w">        </span><span class="nt">restart</span><span class="p">:</span><span class="w"> </span><span class="l">always</span><span class="w">
</span><span class="w">        </span><span class="c"># When your system is Linux, you can use `network_mode: &#34;host&#34;` directly.</span><span class="w">
</span><span class="w">        </span><span class="nt">network_mode</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;host&#34;</span><span class="w">
</span><span class="w">        </span><span class="nt">container_name</span><span class="p">:</span><span class="w"> </span><span class="l">clash</span><span class="w">
</span></code></pre></div><p>9090是web ui端口。1053 dns端口，小钢炮53端口被占。<code>volumes:- ./dashboard:/ui</code> /宿主机路径:/容器路径，开始这里不明白，错了好几回。
UI有两种








<a href="https://github.com/Dreamacro/clash-dashboard/tree/gh-pages" >官方</a>，<code>http://localhost:9090/ui</code>








<a href="https://github.com/haishanh/yacd/tree/gh-pages" >yacd</a>节点收起。<code>http://localhost:8080/</code>。网页版http://yacd.haishan.me/，登陆后可看。
两种ui都用的话，另一种要nignx加载。学习了








<a href="https://www.ruanyifeng.com/blog/2018/02/nginx-docker.html" >&ndash;rm指令</a>，容器停止就会删除。</p>
<h3 id="configyaml">config.yaml</h3>
<p>代理配置








<a href="https://gist.githubusercontent.com/lddsb/b041bb03a8c1295a77d00a5235636ec1/raw/21f0731f40fd53f7b47ad6e45f17f15c811f6b3e/config.yml" >示例</a></p>
<div class="highlight"><pre class="chroma"><code class="language-yml" data-lang="yml"><span class="w">    </span><span class="nt">port</span><span class="p">:</span><span class="w"> </span><span class="m">7890</span><span class="w">
</span><span class="w">    </span><span class="nt">socks-port</span><span class="p">:</span><span class="w"> </span><span class="m">7891</span><span class="w">
</span><span class="w">    </span><span class="nt">allow-lan</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">
</span><span class="w">    </span><span class="nt">external-controller</span><span class="p">:</span><span class="w"> </span><span class="m">0.0.0.0</span><span class="p">:</span><span class="m">8080</span><span class="w">
</span></code></pre></div><p>照搬openclash设定，订阅转换参考








<a href="https://github.com/tindy2013/subconverter" >subconverter</a></p>
<h2 id="启动clash">启动clash</h2>
<p>进入放置两个配置文件目录，运行<code>docker-compose up -d</code>  。查看clash日志，会发现5个端口在监听，代理节点规则加载。日常用SwitchyOmega连接sock5节点，细分网站代理。</p>
<p>还可以局域网转发，有点难，没尝试过。docker里有clash网关。</p>
<p>参考网址：</p>
<ol>
<li>








<a href="https://zmcdbp.com/run-clash-in-docker/" >在Docker中使用Clash</a></li>
<li>








<a href="https://wuyefan.wordpress.com/2020/02/12/clash-docker-openwrt-%E9%85%8D%E7%BD%AE%E4%B8%8E%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95/amp/" >Clash Docker &amp; Openwrt 配置与踩坑记录</a></li>
</ol>

      ]]></content></entry><entry><title>Docker adguardhome记录</title><id>https://ywycd.github.io/post/docker-adguardhome/</id><link href="https://ywycd.github.io/post/docker-adguardhome/" rel="alternate" type="text/html"/><updated>2021-01-09T13:00:12Z</updated><published>2020-03-13T09:44:32Z</published><description>安装 docker pull adguard/adguardhome:arm64-latest桥接macnet ip link set eth0 promisc on docker network create -d macvlan --subnet=192.168.2.0/24 …</description><content type="html"><![CDATA[
        <h2 id="安装">安装</h2>
<div class="highlight"><pre class="chroma"><code class="language-docker" data-lang="docker">    docker pull adguard/adguardhome:arm64-latest<span class="err">
</span></code></pre></div><h3 id="桥接macnet">桥接macnet</h3>
<div class="highlight"><pre class="chroma"><code class="language-docker" data-lang="docker">    ip link <span class="nb">set</span> eth0 promisc on<span class="err">
</span><span class="err"></span>    docker network create -d macvlan --subnet<span class="o">=</span>192.168.2.0/24 --gateway<span class="o">=</span>192.168.2.1 -o <span class="nv">parent</span><span class="o">=</span>eth0 macnet <span class="err">
</span></code></pre></div><p>启动</p>
<div class="highlight"><pre class="chroma"><code class="language-docker" data-lang="docker">    docker run --name adguardhome -v /root/AdguardHome/workdir:/opt/adguardhome/work -v /root/AdguardHome/confdir:/opt/adguardhome/conf -d --network macnet --ip 192.168.2.143 --restart always adguard/adguardhome:arm64-latest <span class="err">
</span></code></pre></div><p>主路由设置lan口网关、dns，有统计，但xx上网速度不行</p>
<h3 id="host模式">host模式</h3>
<p>删除旧容器、设置</p>
<div class="highlight"><pre class="chroma"><code class="language-docker" data-lang="docker">    docker stop adguardhome<span class="err">
</span><span class="err"></span>    docker rm adguardhome<span class="err">
</span><span class="err"></span>    rm -rf /root/AdguardHome/confdir/*<span class="err">
</span><span class="err"></span>    rm -rf /root/AdguardHome/workdir/*<span class="err">
</span></code></pre></div><p>启动</p>
<div class="highlight"><pre class="chroma"><code class="language-docker" data-lang="docker">    docker run --name adguardhome <span class="se">\
</span><span class="se"></span>            -v /root/AdguardHome/workdir:/opt/adguardhome/work <span class="se">\
</span><span class="se"></span>            -v /root/AdguardHome/confdir:/opt/adguardhome/conf <span class="se">\
</span><span class="se"></span>            --restart always <span class="se">\
</span><span class="se"></span>            --net host <span class="se">\
</span><span class="se"></span>            -d adguard/adguardhome:arm64-latest<span class="err">
</span></code></pre></div><p>端口改成1080、1053,指定网关不行。老毛子设置转发(分开填入），统计里只有路由器一个客户端</p>
<div class="highlight"><pre class="chroma"><code class="language-shell" data-lang="shell">all-servers
<span class="nv">server</span><span class="o">=</span>192.168.1.144#1053 <span class="c1">#AdGuardHome</span>
</code></pre></div><p>








<a href="https://www.right.com.cn/forum/forum.php?mod=viewthread&amp;tid=2635946&amp;extra=page%3D2%26filter%3Dtypeid%26typeid%3D21&amp;page=1" >这个</a> 提示后只修改80端口,修改dns成功。但必须添加防火墙规则才能上网。
<code> iptables -t nat -I POSTROUTING -o eth0 -j MASQUERADE</code></p>
<p>小钢炮开启enware,安装cutter、iptables,加规则无门时发现有个iptables-save命令。运行重启路由、小钢炮，可以正常上网，ok。</p>
<p>双开adg再试</p>
<h2 id="设置">设置</h2>
<h3 id="上游dns">上游dns</h3>
<div class="highlight"><pre class="chroma"><code class="language-html" data-lang="html">1.2.4.8
223.5.5.5
119.29.29.29
114.114.114.114
https://dns.rubyfish.cn/dns-query
tls://dns.google
tls://1.1.1.1
</code></pre></div><p>勾选 同时查询。Bootstrap DNS 服务器 <code>114.114.114.114:53</code>，测试上游后应用</p>
<h3 id="规则">规则</h3>
<div class="highlight"><pre class="chroma"><code class="language-html" data-lang="html">https://hosts.nfz.moe/full/hosts
https://gitee.com/banbendalao/adguard/raw/master/ADgk.txt
https://gitee.com/privacy-protection-tools/anti-ad/raw/master/easylist.txt
</code></pre></div><p>修改AdGuardHome.yaml里的</p>
<div class="highlight"><pre class="chroma"><code class="language-yml" data-lang="yml"><span class="w">  </span><span class="nt">blocked_response_ttl</span><span class="p">:</span><span class="w"> </span><span class="m">60</span><span class="w">
</span><span class="w">  </span><span class="nt">ratelimit</span><span class="p">:</span><span class="w"> </span><span class="m">0</span><span class="w">
</span></code></pre></div><p>重启容器</p>
<h2 id="忘记密码">忘记密码</h2>
<p>








<a href="https://github.com/AdguardTeam/AdGuardHome/wiki/Configuration#password-reset" >wiki</a> 安装Apache2，自带htpasswd。用termux
使用htpasswd生成加密密码，linux用下面命令。输出结果是<code>&lt;USERNAME&gt;:&lt;HASH&gt;</code></p>
<p><code> htpasswd -B -n -b &lt;USERNAME&gt; &lt;PASSWORD&gt;</code>
编辑AdGuardHome.yaml，替换相应内容。</p>
<div class="highlight"><pre class="chroma"><code class="language-yml" data-lang="yml"><span class="w">     </span><span class="nt">users</span><span class="p">:</span><span class="w">
</span><span class="w">     </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">...</span><span class="w">
</span><span class="w">     </span><span class="nt">password</span><span class="p">:</span><span class="w"> </span><span class="l">&lt;HASH&gt;</span><span class="w">
</span></code></pre></div><p>开始使用<code>&lt;USERNAME&gt; &lt;PASSWORD&gt;</code>，发现登陆不上。termux用&lt;&gt;错误，改成[]生成。window提示语法错误。
注意到<code>password: &lt;HASH&gt;</code>，灵感一来不加括号，登陆成功。&lt;&gt;应该是提示可修改。</p>

      ]]></content></entry></feed>