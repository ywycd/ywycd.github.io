[{"categories":null,"contents":"开始会打开各app、网站，后面停了就懒得继续，手动太累。签到升级，获得更多的权限。简单介绍下相关工具。\nqiandao 17年注册，中间邮箱一直提示签到失败，全停。后面发现可以自己添加网站签到，重新使用。有的模板已经无法使用。可能chrome版本问题，现在用cookies获取工具（已运行）老是一串代码，无法删除。只能修改变量，手动填写。\n官方 github blog 地址 备用\n分支: https://github.com/AragonSnow/qiandao 还在更新\n制作签到模板 进行签到，保存har文件，上传网站，编辑测试。保存后新建签到，可选时间间隔。某网站已经维护三次，更了解一点（技术小白言）。 可以自行docker搭建。\nQianDao.today签到平台高级使用不完全手册\n获取cookies，万能F12。或者用 Get Cookie For FPlus插件。\n感谢 discuz 点击签到模板视频 ，学到了formhash和日志输出。\n贴吧云签到 源码 github 网友搭建 运行好多年。中间网站打不开，搜索到action 签到贴吧。\n哔哩哔哩签到 之前挂在qiandao，发现漫画也有 签到。有漫画兑换需求， 这个功能更多，但定时老是晚几十分钟。手动抢了几次，能不能抢到靠运气。其他下载功能好用。Secrets变量用EditThisCookie。\n魂签到 官方 GitHub，一个chrome的插件，可以自动签到，每天只要打开浏览器就可以自动签到，不用填写账号密码，不用手动抓取cookie，只需要 添加脚本+登录账号。 脚本发布站点。 该网站介绍。\n其他 单网站，搜索网站+签到，看有没有前人造轮子。\n","date":"2021-01-09T15:30:25+08:00","permalink":"https://ywycd.github.io/post/auto-chekin/","section":"post","tags":["github","qiandao"],"title":"自动签到"},{"categories":null,"contents":"最开始买的tp-link，宿舍上了斐迅0元购（辛酸泪），接触刷机 恩山和 拆机。官改-breed刷高格-openwrt-Padavan养老。刷高格是为了多拨，实际未使用。高格改版（有纯净版加插件），插件添加失败，转到op阵营。op有一贴分享精简加插件，接触编译。杜绝隔段时间就刷机，换成老毛子。\n固件 恩山搜索型号，看有哪些固件可刷。目前有在使用op（插件丰富）、老毛子。 op插件结合 lede说明编译，自建虚拟机科学或 action，曾经出现过 gitpod。老毛子有 hanwckf、 chongshengB，感谢移植第一人荒野无灯，同样有 Action。换hanwckf源插件添加不了，上虚拟机编译，没追新。\n插件 科学，别人分享的实操失败，不得不提ssr+/clash好用，设备上基本都换成小猫咪。\nDNS污染，tracker无法访问，开始dns-forwarder有用。后续失效 修改版coredns部署失败，换新域名解决。去广告，电脑用过adbyby，现在主要用uBlock Origin,订阅 halflife，局域网adghome。\n内网vpn。编译过老毛子里的vpn，只有softethervpn成功，还有其他方案。\nDDNS 动态公网ip，ddns域名+端口实现外网访问，远程操作。op的ddns脚本在Network→IP Addresses and Names选取。选 哪家,目前使用noip,he.net,cf，noip需要每30天激活，he需要域名，注册免费域名推荐freenom。\n但cf限制.tk等免费域名使用api，无法ddns、acme.sh。Github上有好多优秀工具。老毛子自带inadyn出错，运行curl提示(60) Cert verify failed。借用某人脚本，加上-sk可行,cf的 curl。wan重连运行脚本，不用隔5分钟测ip变化。老毛子添加脚本，系统管理-配置管理-保存，不然重启丢失。\ncurl -sk -4 \u0026#34;https://dyn.example.com:password@dyn.dns.he.net/nic/update?hostname=dyn.example.com\u0026#34;\tcurl -sk https://username:password@dynupdate.no-ip.com/nic/update?hostname=example.com home_ip=$(curl ip.sb) curl -sk -X PUT \u0026#34;https://api.cloudflare.com/client/v4/zones/\u0026lt;域名的 ZoneID\u0026gt;/dns_records/\u0026lt;Record 的 ZoneID\u0026gt;\u0026#34; \\  -H \u0026#34;Authorization: Bearer xxxxxxx\u0026#34; \\  -H \u0026#34;Content-Type: application/json\u0026#34; \\  --data \u0026#39;{\u0026#34;type\u0026#34;:\u0026#34;A\u0026#34;,\u0026#34;name\u0026#34;:\u0026#34;home.nova.moe\u0026#34;,\u0026#34;content\u0026#34;:\u0026#34;\u0026#39;$home_ip\u0026#39;\u0026#34;,\u0026#34;ttl\u0026#34;:120,\u0026#34;proxied\u0026#34;:false}\u0026#39; 内网穿透 使用frp，主要小钢炮自带。 这家， 自建服务器教程。frp更新\nwget https://github.com/fatedier/frp/releases/download/v0.34.1/frp_0.34.1_linux_arm64.tar.gz tar -zxvf frp_0.34.1_linux_arm64.tar.gz 光猫没事别恢复出厂设置，别恢复，别恢复 出厂后原来破解方法失效，拆机ttl有点麻烦，应该是配置升级原因。可找客服改桥接。10001按4快速报修，但AI简直智障，选宽带报修，检测正常重启，然后就自动挂掉了！！！ 自助修改。\n","date":"2020-12-22T20:35:56+08:00","permalink":"https://ywycd.github.io/post/router-record/","section":"post","tags":["enshan","github","ddns"],"title":"路由器刷机记录"},{"categories":null,"contents":"通过Action部署到Github Pages。查了一些资料，有点不知道下一步。terminal修改后考虑部署到github，之前用even主题到netlify。\n本地win有hugo文档，部署到git仓库，查阅有建私人仓库、其他repositories。简单点username.github.io建两个branch。\n上传xx.github.io 添加远程，分支提示无法建立，切换分支、加ssh不行。加ssh key提示已使用，不是正确的密钥。看 gh-pages 有提。\nssh-keygen -t rsa -b 4096 -C \u0026#34;$(git config user.email)\u0026#34; -f gh-pages -N \u0026#34;\u0026#34; # You will get 2 files: # gh-pages.pub (public key) # gh-pages (private key) 重建key，clip \u0026lt; ~/.ssh/xxx.pub复制到Deploy Keys。 具体步骤如下，等待上传。\ngit checkout -b main git add . git commit -m \u0026#34;first commit\u0026#34; git push origin main 部署action win无法新建.github文件夹，用git bash mkdir。建立.github/workflows/gh-pages.yml看文档做修改。新建名为ACTIONS_DEPLOY_KEY的Secrets，内容上面生成的私钥。git push后自动生成分支。\nname:githubpageson:push:branches:- mainjobs:deploy:runs-on:ubuntu-18.04steps:- uses:actions/checkout@v2with:submodules:truefetch-depth:0- name:SetupHugouses:peaceiris/actions-hugo@v2with:hugo-version:\u0026#39;0.74.3\u0026#39;extended:true- name:Buildrun:hugo--minify- name:Deployuses:peaceiris/actions-gh-pages@v3with:deploy_key:${{secrets.ACTIONS_DEPLOY_KEY}}publish_dir:./publiccommit_message:${{github.event.head_commit.message}}访问问题 推送后默认改为gh-pages。访问xx.github.io显示404，以为没加README.md。Settings里GitHub Pages Source下切换分支，可行。\n修改terminal，灯大说的那些用上一些。折腾主题时间大于写博客，还是记录点东西吧。\n","date":"2020-12-19T21:16:07+08:00","permalink":"https://ywycd.github.io/post/hugo-actions-gh-pages/","section":"post","tags":["hugo","github"],"title":"hugo通过Github Action部署到Github Pages"},{"categories":null,"contents":"小钢炮设置 密钥认证，无需密码。\n第一步 生成密钥对\n#用dropbearkey生成密钥对 path=/etc/dropbear #生成私钥的地方，可随意填写 dropbearkey -t rsa -f ${path}/key_dropbear -s 2048 #保存公钥到~/.ssh/authorized_keys dropbearkey -t rsa -f $path/key_dropbear -s 2048 -y | sed -n 2p \u0026gt; ~/.ssh/authorized_keys #转换私钥成可以读取的文件 dropbearconvert dropbear openssh ${path}/key_dropbear ${path}/key_openssh #打印私钥 cat ${path}/key_openssh #把私钥复制到记事本备用 也可 ip地址/admin/system/admin 网页添加。运行上面后发现保存公钥提示无法打开目录，修改下。原来是在恩山看到作者，后面无意发现简书地址。\n第二步 禁用密码登录\n修改/etc/init.d/S50dropbear文件，第 10 行添加“-s”参数。如DROPBEAR_ARGS=\u0026quot;$DROPBEAR_ARGS -R -s\u0026quot;。其他-p 要开启的ssh端口。注意备份,保存并重启。./etc/init.d/S50dropbear restart或startup处重启。\n","date":"2020-12-19T20:19:05+08:00","permalink":"https://ywycd.github.io/post/ndm-ssh-key/","section":"post","tags":null,"title":"小钢炮ssh设置密钥登录（免密）"},{"categories":null,"contents":"下载私人仓库 博客内容在私人仓库，现在想下载到电脑上备着，后面继续记录。\n查阅发现git clone https://myusername@github.com/ownersusername/repo_name.git有用，其他出错/要权限（win git bash创建不了文件换cmd下载）。下载到电脑、小钢炮。小钢炮输密码（clone、push）不方便，研究如何ssh验证。无法使用ssh-keygen，电脑复制过去不行。\nSSH认证 生成密钥ssh-keygen -t ed25519 -C \u0026quot;your_email@example.com\u0026quot;，普通人一路回车。复制密钥（记得修改）clip \u0026lt; ~/.ssh/id_ed25519.pub 。 详见 点击头像-Settings-SSH and GPG keys新增，取名随意，区分开来。测试连接ssh -T git@github.com。\nHi username! You've successfully authenticated, but GitHub does not provide shell access. 提示这个，恭喜配置成功。\n小钢炮只能另辟蹊径 ssh-keygen不存在。开始用 ssh-copy-id root@n1地址失败。复制电脑key过去无用。ssh -T提示Connection to git@github.com:22 exited: No auth methods could be used.感谢那个 久远的帖子。\n# Generate your identity key on openwrt dropbearkey -t rsa -f ~/.ssh/id_rsa # Convert public key from dropbear binary to openssh text # Copy and paste output from below to bitbucket account ssh keys dropbearkey -y -f ~/.ssh/id_rsa | head -n 2 | tail -1 # Change git ssh command echo \u0026#34;#!/bin/sh\u0026#34; \u0026gt; ~/.gitssh.sh echo \u0026#34;dbclient -y -i ~/.ssh/id_rsa \\$*\u0026#34; \u0026gt;\u0026gt; ~/.gitssh.sh chmod +x ~/.gitssh.sh echo \u0026#34;export GIT_SSH=\\$HOME/.gitssh.sh\u0026#34; \u0026gt;\u0026gt; /etc/profile # Now login again to openwrt # Now use git (finally) git clone git@github.com:\u0026lt;user\u0026gt;/\u0026lt;repo\u0026gt;.git 运行时提示dbclient: Exited: Error resolving \u0026lsquo;$*\u0026rsquo; port \u0026lsquo;22\u0026rsquo;. Name or service not known。看最后回复修改后成功。\n内置的是dropbear，通过转换才行。ssh -i .ssh/id_rsa git@github.com测试连接。\ngit clone git@github.com:username/repo_name.git无需密码，上面地址要输。\ngit config设置 git config \u0026ndash;global user.name \u0026ldquo;John Doe\u0026rdquo;\ngit config \u0026ndash;global user.email \u0026ldquo;johndoe@example.com\u0026rdquo;\n设置 代理 git config \u0026ndash;global http.proxy \u0026lsquo;socks5h://localhost:port\u0026rsquo;\n查看配置git config -l\n","date":"2020-12-04T16:41:58+08:00","permalink":"https://ywycd.github.io/post/github-ssh-key-and-private-repositories/","section":"post","tags":["github","ssh"],"title":"下载私人仓库和SSH认证"},{"categories":null,"contents":"N多人推荐bitwarden，群友介绍下也起了自建的念头。过程也踩了好多坑，终于部署成功。选择了 bitwarden_rs第三方版，轻量而且高级功能免费。安装教程也多。\n准备 机器上安装好docker，域名，https代理工具（nginx等）\n安装 docker pull bitwardenrs/server:latest\n相关配置\ndocker run -d --name bitwarden \\  -e SIGNUPS_ALLOWED=true \\  -e WEBSOCKET_ENABLED=true \\  -e LOG_FILE=/data/bitwarden.log \\  -e DOMAIN=https://bitwarden.example.tld/vault/ \\  -p 8880:80 \\  -p 3012:3012 \\  -v /bw-data/:/data/ \\  bitwardenrs/server:latest也可用Docker Compose运行。主机上用Compose遇到localhost:port timeout。经常提示容器名已存在（未运行成功），docker ps又找不到相关。无奈放弃。\n设置Nginx 主机有nginx，抄教程运行成功。但这样自带流量统计页404。开始还以为是另外配置的云监控弄的，注释掉无用。发现是location / {问题。 wiki有 sub-path例子。\n# Define the server IP and ports here. upstream bitwardenrs-default { server 127.0.0.1:8880; } upstream bitwardenrs-ws { server 127.0.0.1:3012; } # Redirect HTTP to HTTPS server { listen 80; listen [::]:80; server_name bitwardenrs.example.tld; return 301 https://$host$request_uri; } server { listen 443 ssl http2; listen [::]:443 ssl http2; server_name bitwardenrs.example.tld; # Specify SSL Config when needed  #ssl_certificate /path/to/certificate/letsencrypt/live/bitwardenrs.example.tld/fullchain.pem;  #ssl_certificate_key /path/to/certificate/letsencrypt/live/bitwardenrs.example.tld/privkey.pem;  #ssl_trusted_certificate /path/to/certificate/letsencrypt/live/bitwardenrs.example.tld/fullchain.pem;  client_max_body_size 128M; ## Using a Sub Path Config  # Path to the root of your installation  location /vault/ { proxy_set_header Host $host; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_set_header X-Forwarded-Proto $scheme; proxy_pass http://bitwardenrs-default; } location /vault/notifications/hub/negotiate { proxy_set_header Host $host; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_set_header X-Forwarded-Proto $scheme; proxy_pass http://bitwardenrs-default; } location /vault/notifications/hub { proxy_set_header Upgrade $http_upgrade; proxy_set_header Connection $http_connection; proxy_set_header X-Real-IP $remote_addr; proxy_pass http://bitwardenrs-ws; } # Optionally add extra authentication besides the ADMIN_TOKEN  # If you don\u0026#39;t want this, leave this part out  location ^~ /vault/admin { # See: https://docs.nginx.com/nginx/admin-guide/security-controls/configuring-http-basic-authentication/  auth_basic \u0026#34;Private\u0026#34;; auth_basic_user_file /path/to/htpasswd_file; proxy_set_header Host $host; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_set_header X-Forwarded-Proto $scheme; proxy_pass http://bitwardenrs-default; } } 在nginx文件做相应修改。家里nas也试过跑docker，但最后找不到网页。没配置https环境，装了nginx，提示配置文件出错。设置frp穿透域名，无法访问。ip+端口失败。\n网页、客户端 输入对应网址可打开网页。开始显示502 bad gateway，搜索查了下是加上限制。最重要还是上面端口没改成对应。 创建账户，导入keepass数据（导出相应格式，网页端导入），要等会。\n体验了安卓版，先连接到自建服务器。可自动填充，创建账户密码会提示是否保存到bitwarden。但TOTP空白，还以为跟kp一样。chrome内核浏览器/原来有包名无法填充第二天看文档，加别人指点，发现空白是填key，后面复制。包名是格式不一样，等有时间统一修改。浏览器可安装扩展。\n备份恢复 主要是sqlite3数据库文件，其他bw-data目录有附件文件夹、图标缓存文件夹、密钥等。\n设置nginx过程顺便解决了 云监控问题。开始是docker跑，映射html，中途无法访问。 惯例搜索，记录解决方法。\nlocation /ss { index index.html; alias /usr/local/ServerStatus/web/; autoindex on; } 进阶 设置-域名规则，可设置通用网站（域名不同账密相同）。实际加了两个通用（如淘宝支付宝、微博新浪），测试只有淘宝新浪有填充，显示2个。另外添加也不行。在淘宝新建URI，选默认匹配检测，下面几项具体看 文档。只剩微博一项就可以匹配成功。后续都在项目里新添URI。\n看了下 自定义字段说明，不是想象中简单的备注。看了下YT视频，回来发现说明里是动图。简单说获取网页输入框的ID，填写自定义字段（名称ID，值内容），保存后会自动填充。后续网站如果需要多步验证可以设置。\n关闭用户注册、网页端\nSIGNUPS_ALLOWED=false WEB_VAULT_ENABLED=false ","date":"2020-12-02T13:50:42+08:00","permalink":"https://ywycd.github.io/post/build-my-bitwarden/","section":"post","tags":["docker","bitwarden"],"title":"Bitwarden服务器搭建记录"},{"categories":null,"contents":"docker各平台都有，转移方便。使用时注意选对应平台。不用时可删除。\n portainer（网页管理）、nginx 80x86/typecho 安装使用方便，自带主题、插件够用。 adguardhome 广告屏蔽。目前是安在旁路由上，主路由DNS指向旁路由。 openwrt 旁路由有些功能受限。跑op是为了科学，装插件等。Github上有工具自动编译，本地和网上都尝试过。 clash 当时嫌弃openclash不稳定，修改配置就失效。东拼西凑写好配置，运行成功。目前主要浏览器插件使用。新版配置文件要改，没升级。subconverter订阅转换。 PT 灯大修改版qb、filebrowser,IYUU,flexget etc enshan 大佬移植到N1的镜像。sshd ssh跳板。freenom 域名续期。chfs 网盘支持webdav。添加用户docker exec chfs addusr 用户名 密码 权限 noip 自动续期之前有另一个大佬的方案，但搬不到arm64，试过alpine，放弃。开始家里机器显示finished，但没续期。后来上vps提示host xx confirmed。加了定时任务、docker代理，看后续是否续期。  TBC\u0026hellip;.\n","date":"2020-11-16T06:21:11+08:00","permalink":"https://ywycd.github.io/post/docker-running-containers/","section":"post","tags":["docker","enshan","github"],"title":"记录docker运行容器"},{"categories":null,"contents":" 破解光猫 按步就班\n n1 smb 一直无法识别。照这篇n1开master，成功。原来padavan也有smb服务。\n 小钢炮其他设置 aria2一直出错，看后发现要新建目录。和tr一样必须Dashboard改。如果有注意log也会发现。\n 添加cccat黑名单 网上看到格式，复制进去没用。照其他示例删减不行。看介绍移到routing前面改了下格式，选domain成功。\n 小钢炮挂载 停电后大硬盘无法挂载。搜索了下，去掉openwrt挂载未分配硬盘。按这贴加了sdb分区，在启动加了mount /dev/sdb /mnt/sdb。后续再通电可以直接挂载了。\n","date":"2020-11-15T22:13:09+08:00","permalink":"https://ywycd.github.io/post/mao-se-dun-kai/","section":"post","tags":null,"title":"茅塞顿开"},{"categories":null,"contents":"那两篇用户心得已经具体介绍念如何使用这里就不多做重复，主要讲收集到的小技巧或者彩蛋。分部分来讲下。\n首页   长按添加记本，可自定义内容，改成你想显示的。\n双击标准记本可直接新建进展，双击打卡记本直接打卡。打卡、计时支持NFC。\n长按记本可拖动排序。2.6.0及其之后要到第一屏记本排序里修改。\n首页摇一摇随机进展，可添加回应，也会出现添加补录次数。往左滑，显示最近的进展。2.5.1「最近进展」页新增计时、账本、打卡进展。2.7.0可自定义进展项。实验室「首页进展列表-自定义显示范围」，设置各类记本进展是否显示。类似2.7.1更新时段右上角可选择单个记本.\n点击头像，进展滑过x\n记本   长按进展可直接编辑。如有链接要按底部时间那行。\n长按更多按钮（三个点），可快速复制。\n进展编辑   右上角有小工具，可左滑添加相应项。2.5.1实验室-进展编辑页-自定义工具栏，可长按拖动排序。\n点击字数，隐藏工具栏。如果不统一，实验室里关闭进展编辑页临时修复。\n其他 设置-关于，点击宠物，会出现时间进度条（自己发现）。\n设置倒计时xx天，进展以2020-05-21 格式为开头。新版有纪念日/倒数日，但无法添加到桌面。\n自带小工具，满减计算、日期间隔、休闲娱乐。新增临时文本。双击文本可以改变左右位置，长按可选择复制或删除，可记录琐碎的文本，自问自答也可。\n常驻通知，可选特定记本。摘抄或补录时可用。补录可用补录进展（2.2.0放宽至每月30次），或者手动修改时间再写。\n同步 自动轻备份，在backups目录，只有文本数据。如果不小心清理空间时误删，可手动把 xx.bak 改为 nian.db 放到 nian 文件夹中即可。\n文件夹说明，nian存放图片（默认为剪切，可到实验室关闭）、文本。 nian_audio音频， nian_video视频，插入视频时，最好放到nian_video下，再选择插入。清理空间记得加入白名单。\n个人是隔段时间备份，用syncthing同步到家里电脑，上传网盘。2.5.1及其之后无自带备份，需手动压缩备份。\n或者用FolderSync（莴笋_君推荐）同步文件。其他同步工具也可。具体教程可看这里 https://www.coolapk.com/feed/21594226\n更新 记账 长按确认可以不退出页面记下一笔；长按顶部标题可在支出和收入之间切换。\n计时:  走动的时间数字是可以点击展开全屏的。  中间的色环点击进入纯黑模式。\n记本归类: 第一屏-记本标签，打上同一个标签，首页就会归到同一文件夹下。  保存喜欢的歌曲by你瞅瞅你。录制音频保存。移动歌曲到nian_audio文件夹。重命名，如“audio_2020_11_13_09_09”，同时删掉原来的音频。歌词复制到进展即可。 新版已去除录音功能，添加本地音乐，参考Retro Music Player。 \n不知不觉也写了这么久。有的功能，比如制卡，用得不多，加上那两篇有说到，就略过。当然也有没发现的，欢迎各位使用nian。如“你瞅瞅你”说的倘使有一个念的展览大会，你会发现每一个都是不一样的。\n下载地址 https://www.coolapk.com/apk/sa.nian.so\n这里附上nian历史图标。  \n","date":"2020-11-11T09:43:59+08:00","permalink":"https://ywycd.github.io/post/nian-tips/","section":"post","tags":["nian"],"title":"Nian Tips"},{"categories":null,"contents":"折腾terminal主题失败，netlify显示不全。但灯大也是netlify部署的。\n学习了alias和screen命令。\nalias配置文件在~/.bashrc。source .bashrc配置生效\nscreen -R name Ctrl+A+D后台运行。输入screen -R name可再进入。\n更新并推送博客\ncd blog git add . git commit -m \u0026quot;update post\u0026quot; git push origin master screen -ls列出所有screen任务。screen -X -S [session # number] quit结束特定任务。\nscreen -wipe清除任务（dead）。\n Hugo 从入门到会用 提到添加hasCJKLanguage = true，试了下终于有摘要！！继续折腾灯大修改版Terminal。根目录下模板优先级总是高于 /themes/同名模板 所以复制到博客目录进行修改。\n修改archive格式，list.html里.archive__post h3.archive__post-title 加margin-right: 100px。增加tagcloud，照content/archive.md内容新建tagcloud.md，菜单老是显示showmore。layouts/partials/menu.html修改，mobile留一个就行。\n然后部署到xx.github.io。中间没仔细看教程走弯路，部署完英文有点不一样，加入extended: true。toc用二级目录，代码高亮```后加入相应代码，可复制。github上有提到。\n","date":"2020-11-05T12:08:19+08:00","permalink":"https://ywycd.github.io/post/terminal-fail/","section":"post","tags":null,"title":"Terminal Fail"},{"categories":null,"contents":"跟随灯大脚步，博客从typecho换成hugo。也没几篇记录\n 起因  看到灯大说typecho参考链接，编辑要翻到最下面。再加上要加端口访问。 好像设置nginx反代，就不用加端口。还是懒。 之前就看到那篇，今天有空就开干。 还是借用在线md编辑器。全局下载速度也慢，慢慢等啊\n 步骤  灯大和Hugo 从入门到会用和网上搜索参考 ##安装 下载二进制文件，在win10部署。解压后添加环境变量，注销账号cmd才运行hugo。 要用git命令，另外安了git\n建站 hugo new site blog\n添加主题 cd xxx/blog; git init; git submodule add -b ttys3 https://github.com/ttys3/hugo-theme-terminal.git themes/terminal echo 'theme = \u0026quot;terminal\u0026quot;' \u0026gt;\u0026gt; config.toml  开始写作 hugo new post/my-first-post.md 开启Hugo内置的服务器 hugo server -D http://localhost:1313/ 可访问网站。\n提示 \u0026lt;$.Site.Params.FullWidthTheme\u0026gt;: invalid value; expected bool 搜索在issues里找到答案。config.toml里加 [params] fullWidthTheme = false centerTheme = true\n首页没显示 复制config.toml没用。看别人问题加时间也不行。有提到复制exampleSite里的。 试了下可以显示。格式错误。复制标题可以，修改就不行。但新建md错误。我误删什么了吧。\n中文乱码 md编码改为utf-8。\n其他 默认tags = [\u0026quot;\u0026rdquo;, \u0026ldquo;\u0026quot;] config.toml 加了[taxonomies]，要用tags: (换行)- centerTheme = true 主题居中显示。 后面发现灯大修改是在tty3分支。进terminal用git checkout ttys3切换，git pull发现已经最新。首页终于出现图片。 emmm最后还是换成了even主题。灯大主题部署到netlify显示不完全，文章没有内容摘要（不知道第一篇怎么就显示），一样内容even就有摘要。\n","date":"2020-10-31T15:55:06+08:00","permalink":"https://ywycd.github.io/post/my-first-post/","section":"post","tags":["hugo","github"],"title":"My First Post"},{"categories":null,"contents":"业余喜欢折腾，不过有时还是花钱省时间安逸。\n当前主题 terminal 自己做了点微调。 nas参考\n","date":"2020-10-25T00:00:00Z","permalink":"https://ywycd.github.io/about/","section":"","tags":null,"title":"About"},{"categories":null,"contents":"注册，依靠翻译、fq完成。购买需要身份验证，等他们上班。11点发验证身份，lj英语编了下。2点还没回复，睡了一觉。\n5点醒来，看邮箱，发现被拒，账号被删。不信邪，换邮箱重新注册，找了下验证模板。被现实打击，回复很快，但还是被删。找金毛大佬代购，170/月。后面还越涨越高。\n1.Hetzner 独服一键安装系统（软 RAID0）\n注意：这个方法只适用于软 RAID（不支持硬 RAID）、多硬盘且所有硬盘大小相同的 Hetzner 独立服务器。 SSH 连接服务，输入\necho x | installimage -p /boot:ext3:1G,/:ext4:all -l 0 -r yes -i images/Ubuntu-1804-bionic-64-minimal.tar.gz -a -n Hz \u0026amp;\u0026amp; reboot  硬RAID0 安装 Ubuntu 18.04。\n2.盒子软件安装\n一般的刷子完全可以仅依赖 星大脚本 ,此时还可以大喊 efs 牛逼！\n手动安装 bash \u0026lt;(wget --no-check-certificate -qO- https://github.com/Aniverse/inexistence/raw/master/inexistence.sh)\n用户名asdw,qB、De、rT、FlexGet等。 自动删种 和 Flexget示例\n","date":"2020-09-21T13:22:39+08:00","permalink":"https://ywycd.github.io/post/buy-hetzner/","section":"post","tags":["seedbox","old"],"title":"Hetzner折腾"},{"categories":null,"contents":"起因： clash N多分支，体验了luci openclash不稳定，改动后经常失效，换成docker clash。\n配置文件准备 docker-compose.yml 启动clash\nversion:\u0026#39;3.4\u0026#39;services:clash:image:dreamacro/clash:latest-arm64v8volumes:- ./config.yaml:/root/.config/clash/config.yaml- ./dashboard:/uiports:- \u0026#34;7890:7890\u0026#34;- \u0026#34;7891:7891\u0026#34;- \u0026#34;7892:7892\u0026#34;- \u0026#34;9090:9090\u0026#34;- \u0026#34;1053:1053\u0026#34;restart:always# When your system is Linux, you can use `network_mode: \u0026#34;host\u0026#34;` directly.network_mode:\u0026#34;host\u0026#34;container_name:clash9090是web ui端口。1053 dns端口，小钢炮53端口被占。volumes:- ./dashboard:/ui /宿主机路径:/容器路径，开始这里不明白，错了好几回。 UI有两种 官方，http://localhost:9090/ui yacd节点收起。http://localhost:8080/。网页版http://yacd.haishan.me/，登陆后可看。 两种ui都用的话，另一种要nignx加载。学习了 \u0026ndash;rm指令，容器停止就会删除。\nconfig.yaml 代理配置 示例\nport:7890socks-port:7891allow-lan:trueexternal-controller:0.0.0.0:8080照搬openclash设定，订阅转换参考 subconverter\n启动clash 进入放置两个配置文件目录，运行docker-compose up -d 。查看clash日志，会发现5个端口在监听，代理节点规则加载。日常用SwitchyOmega连接sock5节点，细分网站代理。\n还可以局域网转发，有点难，没尝试过。docker里有clash网关。\n参考网址：\n  在Docker中使用Clash  Clash Docker \u0026amp; Openwrt 配置与踩坑记录  ","date":"2020-05-17T13:10:41+08:00","permalink":"https://ywycd.github.io/post/docker-clash/","section":"post","tags":["docker","old"],"title":"Docker Clash记录"},{"categories":null,"contents":"安装 docker pull adguard/adguardhome:arm64-latest桥接macnet ip link set eth0 promisc on docker network create -d macvlan --subnet=192.168.2.0/24 --gateway=192.168.2.1 -o parent=eth0 macnet 启动\ndocker run --name adguardhome -v /root/AdguardHome/workdir:/opt/adguardhome/work -v /root/AdguardHome/confdir:/opt/adguardhome/conf -d --network macnet --ip 192.168.2.143 --restart always adguard/adguardhome:arm64-latest 主路由设置lan口网关、dns，有统计，但xx上网速度不行\nhost模式 删除旧容器、设置\ndocker stop adguardhome docker rm adguardhome rm -rf /root/AdguardHome/confdir/* rm -rf /root/AdguardHome/workdir/*启动\ndocker run --name adguardhome \\  -v /root/AdguardHome/workdir:/opt/adguardhome/work \\  -v /root/AdguardHome/confdir:/opt/adguardhome/conf \\  --restart always \\  --net host \\  -d adguard/adguardhome:arm64-latest端口改成1080、1053,指定网关不行。老毛子设置转发(分开填入），统计里只有路由器一个客户端\nall-servers server=192.168.1.144#1053 #AdGuardHome  这个 提示后只修改80端口,修改dns成功。但必须添加防火墙规则才能上网。  iptables -t nat -I POSTROUTING -o eth0 -j MASQUERADE\n小钢炮开启enware,安装cutter、iptables,加规则无门时发现有个iptables-save命令。运行重启路由、小钢炮，可以正常上网，ok。\n双开adg再试\n设置 上游dns 1.2.4.8 223.5.5.5 119.29.29.29 114.114.114.114 https://dns.rubyfish.cn/dns-query tls://dns.google tls://1.1.1.1 勾选 同时查询。Bootstrap DNS 服务器 114.114.114.114:53，测试上游后应用\n规则 https://hosts.nfz.moe/full/hosts https://gitee.com/banbendalao/adguard/raw/master/ADgk.txt https://gitee.com/privacy-protection-tools/anti-ad/raw/master/easylist.txt 修改AdGuardHome.yaml里的\nblocked_response_ttl:60ratelimit:0重启容器\n忘记密码  wiki 安装Apache2，自带htpasswd。用termux 使用htpasswd生成加密密码，linux用下面命令。输出结果是\u0026lt;USERNAME\u0026gt;:\u0026lt;HASH\u0026gt;\n htpasswd -B -n -b \u0026lt;USERNAME\u0026gt; \u0026lt;PASSWORD\u0026gt; 编辑AdGuardHome.yaml，替换相应内容。\nusers:- name:...password:\u0026lt;HASH\u0026gt;开始使用\u0026lt;USERNAME\u0026gt; \u0026lt;PASSWORD\u0026gt;，发现登陆不上。termux用\u0026lt;\u0026gt;错误，改成[]生成。window提示语法错误。 注意到password: \u0026lt;HASH\u0026gt;，灵感一来不加括号，登陆成功。\u0026lt;\u0026gt;应该是提示可修改。\n","date":"2020-03-13T17:44:32+08:00","permalink":"https://ywycd.github.io/post/docker-adguardhome/","section":"post","tags":["docker","old"],"title":"Docker adguardhome记录"},{"categories":null,"contents":"","date":"0001-01-01T00:00:00Z","permalink":"https://ywycd.github.io/archive/","section":"","tags":null,"title":"Archive"},{"categories":null,"contents":"","date":"0001-01-01T00:00:00Z","permalink":"https://ywycd.github.io/tagcloud/","section":"","tags":null,"title":"TagCloud"}]